{"id":168092,"link":"https://chinadigitaltimes.net/chinese/2011/07/阮一峰-相似图片搜索的原理/","date":"2011-07-22T03:00:29Z","modified":"2011-07-22T03:00:29Z","title":"阮一峰 | 相似图片搜索的原理","content":"<p><p>上个月，Google把<a rel=\"nofollow\" href=\"http://www.google.com/insidesearch/searchbyimage.html\">&#8220;相似图片搜索&#8221;</a>正式放上了首页。</p>\n<p>你可以用一张图片，搜索互联网上所有与它相似的图片。点击<a rel=\"nofollow\" href=\"http://images.google.com.hk/\">搜索框</a>中照相机的图标。</p>\n<p><a rel=\"nofollow\" href=\"http://images.google.com.hk/\"><img src=\"http://image.beekka.com/blog/201107/bg2011072101.png\" /></a></p>\n<p>一个对话框会出现。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072102.png\" /></p>\n<p>你输入网片的网址，或者直接上传图片，Google就会找出与其相似的图片。下面这张图片是美国女演员Alyson Hannigan。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072103.jpg\" /></p>\n<p>上传后，Google返回如下结果：</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072104.jpg\" /></p>\n<p>类似的&#8221;相似图片搜索引擎&#8221;还有不少，<a rel=\"nofollow\" href=\"http://www.tineye.com/\">TinEye</a>甚至可以找出照片的拍摄背景。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072105.jpg\" /></p>\n<p>==========================================================</p>\n<p>这种技术的原理是什么？计算机怎么知道两张图片相似呢？</p>\n<p>根据<a rel=\"nofollow\" href=\"http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html\">Neal Krawetz</a>博士的解释，原理非常简单易懂。我们可以用一个快速算法，就达到基本的效果。</p>\n<p>这里的关键技术叫做&#8221;感知哈希算法&#8221;（Perceptual hash algorithm），它的作用是对每张图片生成一个&#8221;指纹&#8221;（fingerprint）字符串，然后比较不同图片的指纹。结果越接近，就说明图片越相似。</p>\n<p>下面是一个最简单的实现：</p>\n<p><strong>第一步，缩小尺寸。</strong></p>\n<p>将图片缩小到8&#215;8的尺寸，总共64个像素。这一步的作用是去除图片的细节，只保留结构、明暗等基本信息，摒弃不同尺寸、比例带来的图片差异。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072107.png\" /> <img height=\"64\" src=\"http://image.beekka.com/blog/201107/bg2011072107.png\" width=\"64\" /></p>\n<p><strong>第二步，简化色彩。</strong></p>\n<p>将缩小后的图片，转为64级灰度。也就是说，所有像素点总共只有64种颜色。</p>\n<p><strong>第三步，计算平均值。</strong></p>\n<p>计算所有64个像素的灰度平均值。</p>\n<p><strong>第四步，比较像素的灰度。</strong></p>\n<p>将每个像素的灰度，与平均值进行比较。大于或等于平均值，记为1；小于平均值，记为0。</p>\n<p><strong>第五步，计算哈希值。</strong></p>\n<p>将上一步的比较结果，组合在一起，就构成了一个64位的整数，这就是这张图片的指纹。组合的次序并不重要，只要保证所有图片都采用同样次序就行了。</p>\n<p> <img src=\"http://image.beekka.com/blog/201107/bg2011072109.png\" /> = <img height=\"64\" src=\"http://image.beekka.com/blog/201107/bg2011072109.png\" width=\"64\" /> = 8f373714acfcf4d0</p>\n<p>得到指纹以后，就可以对比不同的图片，看看64位中有多少位是不一样的。在理论上，这等同于计算<a rel=\"nofollow\" href=\"http://zh.wikipedia.org/wiki/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB\">&#8220;汉明距离&#8221;</a>（Hamming distance）。如果不相同的数据位不超过5，就说明两张图片很相似；如果大于10，就说明这是两张不同的图片。</p>\n<p>具体的代码实现，可以参见<a rel=\"nofollow\" href=\"http://www.reddit.com/r/programming/comments/hql8b/looks_like_it_for_the_last_few_months_i_have_had/c1xkcdd\">Wote</a>用python语言写的<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/07/imgHash.txt\">imgHash.py</a>。代码很短，只有53行。使用的时候，第一个参数是基准图片，第二个参数是用来比较的其他图片所在的目录，返回结果是两张图片之间不相同的数据位数量（汉明距离）。</p>\n<p>这种算法的优点是简单快速，不受图片大小缩放的影响，缺点是图片的内容不能变更。如果在图片上加几个文字，它就认不出来了。所以，它的最佳用途是根据缩略图，找出原图。</p>\n<p>实际应用中，往往采用更强大的<a rel=\"nofollow\" href=\"http://www.phash.org/\">pHash</a>算法和<a rel=\"nofollow\" href=\"http://en.wikipedia.org/wiki/Scale-invariant_feature_transform\">SIFT</a>算法，它们能够识别图片的变形。只要变形程度不超过25%，它们就能匹配原图。这些算法虽然更复杂，但是原理与上面的简便算法是一样的，就是先将图片转化成Hash字符串，然后再进行比较。</p>\n<p>P.S.</p>\n<p>我在<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/home.html\">网站首页</a>加上了一些我喜欢的摄影作品，欢迎参观。</p>\n<p>（完）</p>\n<div>\n<h3>文档信息</h3>\n<ul>\n<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a rel=\"nofollow\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\">Creative Commons BY-NC-ND 3.0</a></li>\n<li>原文网址：<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/07/principle_of_similar_image_search.html\">http://www.ruanyifeng.com/blog/2011/07/principle_of_similar_image_search.html</a></li>\n<li>最后修改时间：2011年7月21日 16:11</li>\n<li>付费支持（<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/05/my_google_adsense_is_disabled.html\">说明</a>）：<a rel=\"nofollow\" href=\"https://lab.alipay.com/p.htm?id=2011051700196144\"><img alt=\"支付宝担保交易\" src=\"http://chinadigitaltimes.net/chinese/files/2011/07/3a976ef2rmb_32.png.png\" /></a> | <a rel=\"nofollow\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&#038;business=yifeng.ruan@gmail.com&#038;currency_code=USD&#038;amount=0.3&#038;return=http://www.ruanyifeng.com/thank.html&#038;item_name=Ruan%20YiFeng's%20Blog&#038;undefined_quantity=1&#038;no_note=0\"><img alt=\"paypal\" src=\"http://chinadigitaltimes.net/chinese/files/2011/07/5ca83e43dollar_32.png.png\" /></a> </li>\n</ul>\n</div>\n<p><img src=\"http://chinadigitaltimes.net/chinese/files/2011/07/e2208b1fg2011072101.png-150x150.png\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=750556\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"750556\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":540,"categories":[9203],"tags":[9400]}