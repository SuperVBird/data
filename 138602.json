{"id":138602,"link":"https://chinadigitaltimes.net/chinese/2011/03/用python实现从命令行发twitter/","date":"2011-03-05T07:51:22Z","modified":"2011-03-05T07:51:22Z","title":"用Python实现从命令行发twitter","content":"<p>来源：<a href=\"http://micbase.com/send-twitter-by-python/\">http://micbase.com/send-twitter-by-python/</a></p>\n<p>比如我在写程序，突然来了个灵感，想发推。这时，停下手头的工作，打开firefox，上<a href=\"http://twitter.com\">twitter.com</a>，选中输入框，输入，tweet。 看起来简单，但实际上打断了我写程序的思路，一看到Timeline，就想着往下翻，手头的工作就不要做了。发推应该就跟说话一样简单，不需要那么多步 骤。所以，我折腾出了用命令行发推。其实类似的软件或脚本应该有很多，但我觉得我这个还是比较简单的。</p>\n<p>从2010年8月31号开始，twitter停止了原先的Basic认证方式，改由OAuth认证。这种认证初看会觉得很复杂，几个token发来 发去。简化他有两个办法，第一，官方提供基于OAuth认证的library，各种语言都有，直接拿来用就是；第二，对于单一用户，不用完整实现 OAuth功能，官方可以提供最终的access_token。</p>\n<p>本文就是基于第二点做的，而且这个方法具有普遍性。很多情况是这样：你在GAE上建了一个gtap来做twitter API，或者<span><a href=\"http://micbase.com/tag/gtalk/\" rel=\"nofollow\" title=\"GTalk\">GTalk</a></span>机器人来发推，但实际上，这些服务很有可能只有你自己在使用。这时，你就可以直接从官方获取access_token来进行操作。<br /> <span></span> </p>\n<h2>1.准备工作</h2>\n<p>首先你要有一个twitter app，<a href=\"http://code.google.com/p/gtap/wiki/INSTALL\">这里</a>有一段文字讲如何注册应用。</p>\n<p><a href=\"https://dev.twitter.com/apps\">https://dev.twitter.com/apps</a> 从这里进入，选择你的应用，记录下Consumer key和Consumer secret。</p>\n<p>然后点右边的“My Access Token”，记录下里面的oauth_token和oauth_token_secret。</p>\n<p>获得这四个值，你就可以控制你自己的twitter帐号了。</p>\n<h2>2.获取oauth2库</h2>\n<p>这是官方推荐的一个OAuth认证库，这里使用easy_install来安装。</p>\n<p>如果没有easy_install，请先安装，当然python你肯定要装。</p>\n<p><strong><span>apt-get install python-setuptools</span></strong></p>\n<p>Windows用户可以先去Google搜一个<a href=\"http://www.google.com/search?q=ez_setup.py\">ez_setup.py</a>的脚本，执行后就自动装好了。</p>\n<p>装好easy_install后执行：</p>\n<p><strong><span>easy_install oauth2</span></strong></p>\n<h2>3.程序代码</h2>\n<p>点击<a href=\"http://micbase.com/wp-content/uploads/2011/02/t.py\">这里</a>下载程序代码。</p>\n<div><span>01</span> <span># -*- coding: utf-8 -*-</span><br /> <span>02</span><br /><span>03</span> <span>import</span> <span>oauth2</span> <span>as</span> <span>oauth</span><br /> <span>04</span> <span>import</span> <span>urllib</span><br /><span>05</span> <span>import</span> <span>sys</span><br /> <span>06</span><br /><span>07</span> <span>def</span> <span>oauth_req</span>(<span>url</span><span>,</span> <span>http_method</span><span>=</span><span>&#8220;GET&#8221;</span><span>,</span> <span>post_body</span><span>=</span><span>None</span><span>,</span> <span>http_headers</span><span>=</span><span>None</span><span>):</span><br /> <span>08</span>     <span>consumer</span> <span>=</span> <span>oauth</span><span>.</span><span>Consumer</span>(<span>key</span><span>=</span><span>&#8220;Consumer key&#8221;</span><span>,</span> <span>secret</span><span>=</span><span>&#8220;Consumer secret&#8221;</span>)<br /> <span>09</span>     <span>token</span> <span>=</span> <span>oauth</span><span>.</span><span>Token</span>(<span>key</span><span>=</span><span>&#8220;oauth_token&#8221;</span><span>,</span> <span>secret</span><span>=</span><span>&#8220;oauth_token_secret&#8221;</span>)<br /> <span>10</span>     <span>client</span> <span>=</span> <span>oauth</span><span>.</span><span>Client</span>(<span>consumer</span><span>,</span> <span>token</span>)<br /> <span>11</span><br /><span>12</span>     <span>resp</span><span>,</span> <span>content</span> <span>=</span> <span>client</span><span>.</span><span>request</span>(<br /> <span>13</span>         <span>url</span><span>,</span><br /><span>14</span>         <span>method</span><span>=</span><span>http_method</span><span>,</span><br /> <span>15</span>         <span>body</span><span>=</span><span>post_body</span><span>,</span><br /> <span>16</span>         <span>headers</span><span>=</span><span>http_headers</span><br /> <span>17</span>     )<br /><span>18</span>     <span>return</span> <span>content</span><br /> <span>19</span><br /><span>20</span> <span>if</span> <span>len</span>(<span>sys</span><span>.</span><span>argv</span>) <span>==</span> <span>2</span><span>:</span><br /> <span>21</span>     <span>#For Windows</span><br /><span>22</span>     <span>#a = &#8220;status=&#8221; + urllib.quote(sys.argv[1].decode(&#39;gb2312&#39;).encode(‘utf-8′))</span><br /> <span>23</span>     <span>#For Linux</span><br /><span>24</span>     <span>a</span> <span>=</span> <span>&#8220;status=&#8221;</span> <span>+</span> <span>urllib</span><span>.</span><span>quote</span>(<span>sys</span><span>.</span><span>argv</span><span>[</span><span>1</span><span>])</span><br /> <span>25</span>     <span>print</span> <span>&#8220;Tweeting…&#8221;</span><br /><span>26</span>     <span>req</span> <span>=</span> <span>oauth_req</span>(<br /> <span>27</span>     <span>&#8216;<a href=\"http://api.twitter.com/1/statuses/update.xml\">http://api.twitter.com/1/statuses/update.xml</a>&#8216;</span><span>,</span><br /> <span>28</span>     <span>&#8216;POST&#8217;</span><span>,</span><br /><span>29</span>     <span>a</span>)<br /> <span>30</span>     <span>#print req</span><br /><span>31</span>     <span>print</span> <span>&#8220;Done.&#8221;</span><br /> <span>32</span> <span>else</span> <span>:</span><br /><span>33</span>     <span>print</span> <span>&#8220;Error Parameter&#8221;</span>    </div>\n<p>Windows下的命令行不是UTF8编码，所以要转换一下。</p>\n<p>另外，不同系统下请使用相应的代码。然后把上面的四个值替换成从第一步获取的值。</p>\n<h2>4.使用</h2>\n<p>在命令行下执行</p>\n<p><strong><span>python t.py “从命令行发推测试”</span></strong></p>\n<p>你如果还嫌前面的python麻烦，那就写个shell脚本替代吧。如果你还问为什么没有看TL、fo人、RT功能。我做这个东西的目的就是在不打 断思路的前提下去发个推，仅此而已。如果你都想到了要RT某某推，那还是去官网或者其他客户端吧，这时你已经没心思在手头工作上了，就谈不上不打断思路。</p>\n<h2>5.参考资料</h2>\n<p><a href=\"http://dev.twitter.com/pages/auth\">Authenticating Requests with OAuth</a></p>\n<p><a href=\"http://dev.twitter.com/pages/oauth_single_token\">Using one access token with OAuth</a></p>\n<p></p>\n<h4>—————————————————————————————————————————</h4>\n<h4>需要翻墙利器赛风? 请<a href=\"https://www.google.com/profiles/112915952962578336480\">阅读和关注中国数字时代</a>。</p>\n<p>推特用户请点击<a href=\"http://qinzhigang.in/login.php\">这里</a>免翻墙上推特</h4>\n<p>请点击<a href=\"https://sesawe.net/-Tools-zh-.html\">这里</a>下载翻墙软件 </p>\n<p>更多翻墙方法请发电邮(最好用Gmail)到：<a href=\"mailto:fanqiang70ma@gmail.com\">fanqiang70ma@gmail.com</a>  </p>\n<p>请阅读和关注<a href=\"https://www.google.com/profiles/112915952962578336480\">中国数字时代</a>、翻墙技术博客<a href=\"https://www.google.com/profiles/chinagfwblog\">GFW BLOG</a>（免翻墙）  </p>\n<p>请使用<a href=\"https://www.google.com/reader/view/\">Google Reader</a><a href=\"https://www.google.com/reader/view/feed/http://chinadigitaltimes.net/chinese/feed\">订阅中国数字时代中文版</a>（<a href=\"http://chinadigitaltimes.net/chinese/feed\">http://chinadigitaltimes.net/chinese/feed</a>），阅读最有价值的中文信息；以及<a href=\"https://www.google.com/reader/view/feed/http://feeds2.feedburner.com/chinagfwblog\">GFW BLOG（功夫网与翻墙）</a><a href=\"http://feeds2.feedburner.com/chinagfwblog\">http://feeds2.feedburner.com/chinagfwblog</a>，获取最新翻墙工具和翻墙技巧信息。</p>\n<p>  </p>\n<div><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5500297126185736776-5031320272968502858?l=www.chinagfw.org\" width=\"1\" /></div>\n<p><img height=\"1\" src=\"http://feeds.feedburner.com/~r/chinagfwblog/~4/EGsoPk14cXI\" width=\"1\" /></p>\n<p><b>要翻墙？(发邮件到Gmail):wangluoziyou2011ATgmail.com</b></p>\n","author":96,"categories":[15300],"tags":[8339,8795,8800]}