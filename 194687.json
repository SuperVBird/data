{"id":194687,"link":"https://chinadigitaltimes.net/chinese/2011/11/翻墙-使用-tcp-方式-dns-查询规避-dns-污染/","date":"2011-11-08T08:00:35Z","modified":"2011-11-08T08:00:35Z","title":"翻墙 | 使用 TCP 方式 DNS 查询规避 DNS 污染","content":"<p><p><strong>使用 TCP 方式 DNS 查询规避 DNS 污染</strong></p>\n<h1>什么是 DNS 污染</h1>\n<p>广义上的 DNS（Domain Name System）污染是一种让一般用户由于得到虚假目标主机 IP 而不能与其通信的方法，是 GFW 的主要手段之一。其手段又可以分为 DNS 劫持与狭义 DNS 污染两种：</p>\n<ol>\n<li>DNS 劫持指的是通过行政手段控制墙内的 DNS 服务器，使其对敏感查询直接返回伪造的错误结果。</li>\n<li>狭义 DNS 污染则是指监控经过 GFW 的 DNS 查询请求，发现敏感查询时抢先向查询客户端返回伪造的错误结果。</li>\n</ol>\n<p>体现在最终用户上，出现的现象就是：使用墙内 DNS 服务器必然会遭遇 DNS 劫持，而使用墙外 DNS 服务器又会遭遇 DNS 污染。前者是以行政手段实现的，无法以技术手段规避；而后者则是可以通过技术手段予以规避的。</p>\n<p><span></span></p>\n<h1>DNS 污染的原理及应对</h1>\n<h2>原理</h2>\n<p>注意到如下事实：现行标准中 DNS 查询通常使用 UDP 协议并且没有任何验证机制，并且根据惯例查询者会接受第一个返回的结果而抛弃之后的。</p>\n<p>因此 GFW 只需监控 53 端口（DNS 标准端口）的 UDP 查询数据报并分析，一旦发现敏感查询，则抢先向查询者返回一个伪造的错误结果，从而实现 DNS 污染。</p>\n<h2>应对</h2>\n<p>针对上述原理，可以提出很多针对的应对方法：</p>\n<ol>\n<li>给 DNS 查询协议增加验证机制：<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.dnssec.net/\">DNSSEC</a>。这是最根本的解决方法，但是目前支持 DNSSEC 的服务器及客户端都还没有普及，希望在不久的将来能够用上。</li>\n<li>尝试在返回的查询结果辨认出伪造结果并予以抛弃：最简单的方法是抛弃第一个接收到返回结果而使用第二个，稍复杂一点的方法可以接收多个返回结果然后观察统计结果，等等。</li>\n<li>根据 <a rel=\"nofollow\" target=\"_blank\" href=\"http://www.freesoft.org/CIE/RFC/1035/index.htm\">RFC 1035</a>，DNS 查询除了 UDP 协议之外，也可能通过 TCP 方式进行，而 TCP 协议是无法被伪造返回结果的，因此可以通过 TCP 方式的 DNS 查询来规避 DNS 污染。</li>\n</ol>\n<p>其中，2 3 两种方法都较易实现，而后者更为可靠，因此接下来介绍方法 3 的实现。</p>\n<h1>使用 TCP 方式 DNS 查询规避 DNS 污染的具体实现</h1>\n<h2>准备</h2>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://www.freesoft.org/CIE/RFC/1035/39.htm\">RFC 1035 4. Messages</a> 一节记载了 DNS 查询请求的数据格式，及 UDP 与 TCP 两种协议的发送格式。</p>\n<h2>设计</h2>\n<p>总的来说，需要设计的是一个 DNS 转发器，其工作流程如下：</p>\n<ol>\n<li>接收客户端的 UDP 协议 DNS 查询请求</li>\n<li>将 UDP 查询转换成 TCP 查询并转发给墙外的某支持 TCP 协议的服务器，如 Google Public DNS ( 8.8.8.8 , 8.8.4.4 ), Ordns.he.net ( 2001:470:20::2 )</li>\n<li>接收服务器通过 TCP 协议返回的查询结果</li>\n<li>将查询结果换成 UDP 协议格式并返回给客户端</li>\n</ol>\n<p>理论上，有了这样一个转发器之后，将其部署在一个墙内的机器上（方便起见通常可以部署在客户端本机），并将客户端的 DNS 服务器设为该机器就可以绕开 GFW 的 DNS 污染了。</p>\n<h3>实现</h3>\n<p>大概半年前用 Java 写过一个简单实现，虽然代码简陋，但使用至今也没有发现大的问题，现共享出来，权作抛砖引玉，欢迎完善或者提出更好的想法。</p>\n<ul>\n<li><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/pinepara/DnsTransponder\">代码 @ Github</a></li>\n<li><a rel=\"nofollow\" target=\"_blank\" href=\"http://file.pinepara.info/dnsserver.zip\">可执行文件</a></li>\n</ul>\n<p><em>注：可执行文件在 64 位 Win7 下生成，不保证其他系统可用</em></p>\n<h1>参考资料</h1>\n<ol>\n<li><a rel=\"nofollow\" target=\"_blank\" href=\"http://gfwrev.blogspot.com/2009/11/gfwdns.html\">深入理解GFW：DNS污染</a></li>\n<li><a rel=\"nofollow\" target=\"_blank\" href=\"http://www.ietf.org/rfc/rfc1035.txt\">RFC 1035</a></li>\n</ol>\n<p><strong>来源</strong>：<a rel=\"nofollow\" target=\"_blank\" href=\"http://wordpress.pinepara.info/tech/avoid-dns-pollution-using-tcp\">http://wordpress.pinepara.info/tech/avoid-dns-pollution-using-tcp</a></p>\n<p>文章写的好，软件不会用。</p>\n<p>==========</p>\n<p><strong> DNS 转发器 UDP to TCP 解决 DNS 污染</strong></p>\n<p>DNS 转发器<br />\n可以将 UDP 形式的 DNS 数据包，以 TCP 形式转发至指定的 DNS 服务器（默认为 Google DNS 8.8.4.4）。<br />\n因为听说 TCP 的 DNS 数据包不会被污染或者被伪造，于是做了这么个玩意，省得改系统文件了。</p>\n<p>下载链接：<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.upload-drive.com/file/1000870/dnsforwarder-zip.html\">http://www.upload-drive.com/file/1000870/dnsforwarder-zip.html</a></p>\n<p>有一个办法就是将首选 DNS 设为 127.0.0.1，将候选 DNS 设为其他，这样当 DNS 转发器没有启动时也不会影响正常使用。</p>\n<p>这是直接通过 8.8.8.8 进行的查询（存在 DNS 伪造）：</p>\n<div> C:UsersAdmin>nslookup twitter.com 8.8.8.8<br />\n服务器:  google-public-dns-a.google.com<br />\nAddress:  8.8.8.8非权威应答:<br />\n名称:    twitter.com<br />\nAddresses:  37.61.54.158<br />\n159.106.121.75</div>\n<div>这是通过转发器进行的查询：</div>\n<p>C:UsersAdmin>nslookup twitter.com 127.0.0.1<br />\n服务器:  localhost<br />\nAddress:  127.0.0.1</p>\n<p>非权威应答:<br />\n名称:    twitter.com<br />\nAddresses:  199.59.148.82<br />\n199.59.148.10<br />\n199.59.149.198</p>\n<div>这是使用 <a rel=\"nofollow\" target=\"_blank\" href=\"http://www.kloth.net/services/nslookup.php\">http://www.kloth.net/services/nslookup.php</a> 进行的查询：</div>\n<pre>DNS server handling your query: 8.8.8.8\n DNS server's address:\t8.8.8.8#53\n\n Non-authoritative answer:\n Name:\ttwitter.com\n Address: 199.59.148.10\n Name:\ttwitter.com\n Address: 199.59.149.230\n Name:\ttwitter.com\n Address: 199.59.148.82\n\n<strong>来源</strong>：<a rel=\"nofollow\" target=\"_blank\" href=\"http://micasmica.blogspot.com/2011/08/dns.html\">http://micasmica.blogspot.com/2011/08/dns.html</a></pre>\n<blockquote>\n<p>DNS 转发器<br />\n可以将 UDP 形式的 DNS 数据包，以 TCP 形式转发至指定的 DNS 服务器（默认为 Google DNS 8.8.4.4）。<br />\n因为听说 TCP 的 DNS 数据包不会被污染，于是做了这么个玩意，省得改系统文件了。</p>\n<p>文件列表：<br />\ndnsforwarder.exe        主程序文件</p>\n<p>使用方法：<br />\n直接打开 dnsforwarder.exe，如果没有自动退出，最小化就可以了。然后将系统的 DNS 设置为 127.0.0.1。<br />\n可能还需要重新连一下网。</p>\n<p>在命令提示符中执行 “nslookup www.google.com 127.0.0.1”可以看到效果。</p>\n<p>如果需要指定 DNS 服务器的话，那么在执行的时候加上一个参数就可以了，比如：</p>\n<p>dnsforwarder.exe 203.80.96.10</p>\n<p>最近 Google DNS 被干扰的比较厉害，出现很多错误，请指定其它 DNS。</p>\n</blockquote>\n<p>软件很好用！<br />\n==========</p>\n<p>以前还写过一些方法，可以查看 <a rel=\"nofollow\" target=\"_blank\" href=\"http://igfw.tk/archives/2960\">http://igfw.tk/archives/2960</a> （几个防止DNS污染的方法）</p>\n<p>目前GFW对VPN或SSH代理服务域名大量进行DNS污染，无论是免费VPN还是收费VPN都大面积遭受GFW DNS污染，所以防止DNS污染是很有必要的。</p>\n</p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=738338\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"738338\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":983,"categories":[15300],"tags":[8510,8795]}