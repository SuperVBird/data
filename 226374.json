{"id":226374,"link":"https://chinadigitaltimes.net/chinese/2012/05/翻墙-理解ssl窃听/","date":"2012-05-16T17:25:42Z","modified":"2012-05-16T17:25:42Z","title":"翻墙 | 理解SSL窃听","content":"<p>原文：<a rel=\"nofollow\" target=\"_blank\" href=\"http://igfw.net/archives/9194\">http://igfw.net/archives/9194</a></p>\n<div></div>\n<div>\n<p>近日在网络传得比较离谱的<a rel=\"nofollow\" target=\"_blank\" href=\"http://robertmao.com/2009/09/25/gfwssl/\">一条消息</a>是对TLS/SSL应用层的窃听。随着瓷翁生日的临近，长城似乎有越蹦越高的趋势，导致不少人对SSL v3的安全性也产生了怀疑，这里客栈尝试用简短的图文解释一下所谓的窃听如何完成，以及通过什么方式避免。 </p>\n<blockquote>\n<p>首先要强调的是，目前没有对SSL v3这个安全协议的可行攻击；所有窃听均需利用客户端（浏览器及用户）的弱点执行，而非对协议本身的直接攻击。</p>\n</blockquote>\n<p> <strong>So, in before the fear spreads&hellip;</strong></p>\n<p>SSL会话破解有<strong>三种主要方式</strong>：<strong>一是</strong>通过嵌入系统获取密匙，<strong>二是</strong>通过巧妙的方式进行Cryptanalysis（密码分析），<strong>三是</strong>设立中间人执行MITM攻击。</p>\n<p>假如攻击者能入侵用户主机或服务器，那用户资料就直接沦为刀俎了，再绕道SSL属于白费力气。因此保持个人系统安全对防止第一类&ldquo;破解&rdquo;尤为重要。攻击者并不是在破解SSL协议，而是在直接想办法和你的系统挂钩，盗取加密前和解析后的信息。</p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/what-you-see-is-what-it-sees.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/what-you-see-is-what-it-sees-500x121.jpg\" alt=\"\" width=\"500\" height=\"121\" /></a></p>\n<p><strong>本地</strong>分析加密会话很简单，类似<em>Http Analyzer</em>的软件支持IE，Firefox，Chrome和Safari几款浏览器的请求记录，它们是<strong>站在用户与浏览器之间</strong>的看客，而非本地与远程主机之间的黑客（对于不支持的软件，例如Opera或Putty，它是无法记录HTTPS请求的）。</p>\n<p>第二种方式因<a rel=\"nofollow\" target=\"_blank\" href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.4742\">缺乏有效的密码分析</a>，并没有实际应用；SSL v3本身没有已知漏洞，解开会话需要利用客户端和服务器端的漏洞完成（获取密匙）；等同第一类攻击了。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-basic.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-basic-500x375.jpg\" alt=\"\" width=\"500\" height=\"375\" /></a></p>\n<p>相比之下，最可行的SSL窃听方式是第三类：<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.pburkholder.com/sysadmin/SSL-mitm/index.php\">通过MITM</a>。无需获得密匙，无需本地木马，远程窃听者通过建立两条链接：一条从窃听对象到窃听服务器，另一条从窃听服务器到目的服务器，尝试偷换身份并做到会话窃听。</p>\n<p>之前我们也说了，协议本身并没有漏洞，因此浏览器的安全设计和用户的安全意识就成了最受考验的部分。第三类攻击要生成不合法的证书，当今的浏览器在遇到该类证书时都会提示错误，但信息的表达方式各不相同，误导用户接受非法证书也时常发生。</p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-chrome.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-chrome-500x140.jpg\" alt=\"\" width=\"500\" height=\"140\" /></a></p>\n<p>Chrome 3-beta的警告是最显眼的。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-firefox.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-firefox-500x386.jpg\" alt=\"\" width=\"500\" height=\"386\" /></a></p>\n<p>Firefox 3.5的警告需要阅读，也算显眼的。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-opera.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-opera.jpg\" alt=\"\" width=\"471\" height=\"418\" /></a></p>\n<p>Opera 10的警告包含有用信息，但未必能帮助分析。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-safari.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-safari.jpg\" alt=\"\" width=\"497\" height=\"206\" /></a></p>\n<p>Safari 4 on Windows的警告和普通提示没什么区别，一点就过了&hellip;&hellip;</p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-ie7.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-ie7-500x296.jpg\" alt=\"\" width=\"500\" height=\"296\" /></a></p>\n<p>IE7的警告够简洁，但解释不足。不知道IE8如何（安装不能，无法测试）。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-ie6.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-ie6.jpg\" alt=\"\" width=\"406\" height=\"299\" /></a></p>\n<p>IE6的警告有够误导，以多数票计算，这是可以接受的对吧？</p>\n<p>为了更好地测试各浏览器在MITM攻击下的反应，这里使用Stanford教学用的简单<a rel=\"nofollow\" target=\"_blank\" href=\"http://crypto.stanford.edu/ssl-mitm/\">SSL MITM Proxy</a>来测试。具体设置如下：</p>\n<p>先准备好浏览器与Java。下载工具并解压压缩包后，使用命令行工具，转到该目录，并输入以下命令（Linux用户请看Readme）。</p>\n<p> <code>java -cp iaik_jce.jar; mitm/MITMProxyServer -localHost localhost -localPort 8001 -outputFile output.txt -keyStore FakeCAStore -keyStorePassword passphrase -v</code></p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-1.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-1-500x115.jpg\" alt=\"\" width=\"500\" height=\"115\" /></a></p>\n<p>这样就会在本地设立一个窃听用的Proxy，它会尝试修改所有加密链接发送的证书，将自己寄生在加密连接上。（注意<strong>该Proxy并不需要安装在本地</strong>，它可以安装在信息途经的任意服务器上，<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.securityfocus.com/brief/910\">包括任何Tor节点</a>。）</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-3.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-3.jpg\" alt=\"\" width=\"448\" height=\"416\" /></a></p>\n<p>配置浏览器使用这个代理（localhost:8001），模拟请求通过远程的窃听服务器。和目的服务器配上之后，Proxy就会接收原证书，并制造假证书发送给浏览器，这时浏览器应该提示错误。</p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-4.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-4-500x376.jpg\" alt=\"\" width=\"500\" height=\"376\" /></a></p>\n<p>假如用户选择接受该证书，则余下的通信可被监听，这些通行将被记录在本地的output.txt，各位可自行瞻仰其详尽程度。</p>\n<p> <a rel=\"nofollow\" target=\"_blank\" href=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-5.jpg\"><img src=\"http://bitinn.net/wp-images/blogimage/2009/09/mitm-client-5-372x500.jpg\" alt=\"\" width=\"372\" height=\"500\" /></a></p>\n<p>如果你看到的传输内容是一大串数字，请看Encoding是否启用了gzip，那是gzip后的网页数据；Amazon不启用gzip，直接返回HTML代码。</p>\n<p> 一个简单的SSL窃听就是这样完成的。<strong>但如何防止呢</strong>？</p>\n<p>I.</p>\n","author":1005,"categories":[18269,1,15300],"tags":[7775,8795]}