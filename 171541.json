{"id":171541,"link":"https://chinadigitaltimes.net/chinese/2011/08/关于编程，大学没有传授的十件事/","date":"2011-08-11T08:30:11Z","modified":"2011-08-11T08:30:11Z","title":"关于编程，大学没有传授的十件事","content":"<p><p>　　笔者依然记得当年完成学业时，深信自己已经准备好进入任何一家软件公司，并开始成为一个顶级的开发人员。显然，开始工作后没多久，笔者就意识到，还有很多事是我所不了解的。</p>\n<p>　　在不断吸取经验的同时，笔者一直在努力学习那些我从来没有学过的，但却是成为优秀的开发人员所应了解的基本知识。以下是笔者希望自己能在学校就学到的十件事。</p>\n<p><img alt=\"编程\" src=\"http://download.williamlong.info/upload/2769_1.jpg\" /></p>\n<p>　　<strong>1. 我们总是错的</strong></p>\n<p>　　开发人员有着相当大的自我意识，包含了一些其他的非技术性缺陷，这也正是为什么我们很难发现我们做错了什么。我看到过很多无休止的设计讨论，开发人员不断地发表自己的想法……呵呵！猜猜怎样……我们都错了，唯一的区别就是我们犯错的离谱程度不同。</p>\n<p>　　理解并接受这个事实非常重要，我们只有这样做了，才能敞开心胸去听听别人的意见，采用他们的想法，来得出一个更好的解决办法。</p>\n<p>　　<strong>2. 事情若有可能出错，就一定会出错</strong></p>\n<p>　　也就是说“希望驱动开发（hope driven development）”，如果你对于某些事并不确定，如果你发现自己使用了“应该”这个词，那你就麻烦了。</p>\n<p>　　而这只有一个解决方案，尽己所能去保证它不会出错，这可能意味着你需要编写一个测试、调试并验证需求……</p>\n<p>　　<strong>3. 所有的代码都烂</strong></p>\n<p>　　在我抱怨那些我碰到过的代码十年之久后，我得出了一个精辟的结论，所有的(包括我自己写的)代码，都烂。当然，烂还是有等级之分的，但即便是我见过写得最好的代码，也是难以读懂的。</p>\n<p>　　这并不意味着把你的代码写得更好是没有意义的，恰恰相反，最好和最坏的代码还是有天壤之别的。</p>\n<p>　　<strong>4. 错误（Bug）总会存在</strong></p>\n<p>　　永远存在！问题只在于要发现它困难与否。</p>\n<p>　　<strong>5. 客户最大</strong></p>\n<p>　　许多客户并不在乎你在方案中使用了哪些技术，应用程序需不需要做更多的事……或通俗上说，你是否使用了好的实践方案。</p>\n<p>　　也因为我可以想象，要是我只说了前面那一段，我会收到多少恶评，让我说得更清楚些……我想说的是，我们永远不应该忘记客户的立场，有时候，开发人员为了最佳实践而在项目工程中过度坚持采用（某些）技术，但要记住，若这些技术无法给客户带来价值，那就放弃吧！</p>\n<p>　　<strong>6. 纸上谈兵是行不通的</strong></p>\n<p>　　我曾认为，我可以在前期就把我的整个设计置于纸上，然后只要将缺漏处填上就好，但这样根本行不通。</p>\n<p>　　软件开发是复杂的，若不亲手去碰碰看，很难看到所有的实际层面以及它们之间的关系。因此，在前期保持规划与设计是很有用的，但不要过度坚持，也不要把设计图表当作合约固守。</p>\n<p>　　<strong>7. 少即是多</strong></p>\n<p>　　或者，你可能知道更好的说法是：“Keep it simple, stupid!”（保持简单，KISS设计原则）。所以，如果没有必要的就舍弃吧！因为要记住：“事情若有可能出错，就一定会出错。”</p>\n<p>　　<strong>8. 编写代码只是我们所做工作的20%而已</strong></p>\n<p>　　请准备好，花80%的时间用于思考、调试、测试、开会、谈话……而所有的其他活动都是非常重要的，所以若要成为一个优秀的软件开发人员，你必须培养广泛而全面的技巧（Skill），而不仅仅是技术（Technical）。</p>\n<p>　　<strong>9. 客户永远不知道他/她想要的是什么</strong></p>\n<p>　　客户若有需求，或是想法，但是他们不知道详细情况……软件开发要做的工作就是，发现细节并去除所有的不确定性，将这些需求转换成客户想要一个应用程序。</p>\n<p>　　<strong>10. 已经有人做过了</strong></p>\n<p>　　所以不要再重新发明轮子，用谷歌找找看，或者更好的方法是，请教你的同事，很多时候他们可能都已经做了相同、或非常类似的事情。</p>\n<p>　　英文原文：<a href=\"http://www.makinggoodsoftware.com/2010/05/27/10-things-they-never-teach-in-college-about-programming/\">10 things they never teach in college about programming </a></p>\n<p>　　中文翻译：<a href=\"http://www.jobbole.com/entry.php/1097\">伯乐在线</a></p>\n<p><a href=\"http://www.williamlong.info/archives/2769.html\">评论《关于编程，大学没有传授的十件事》的内容&#8230;</a></p>\n<h3>相关文章:</h3>\n<ul>\n<p><a href=\"http://www.williamlong.info/archives/2717.html\">一个软件工程师在北京的反省</a></p>\n<p><a href=\"http://www.williamlong.info/archives/2716.html\">Web是开源最大的成功</a></p>\n<p><a href=\"http://www.williamlong.info/archives/2710.html\">Web应用程序的开发步骤</a></p>\n<p><a href=\"http://www.williamlong.info/archives/2700.html\">写给新手程序员的一封信</a></p>\n<p><a href=\"http://www.williamlong.info/archives/2697.html\">老板会因为你拼命写代码而感谢你吗？ </a></p>\n</ul>\n<p><img alt=\"统计\" border=\"0\" src=\"http://img.tongji.linezing.com/707050/tongji.gif\" /><br />关于我们： 地址 &#8211; www.williamlong.info &#8211; <a href=\"http://www.google.com/reader/shared/williamlone\">谷歌阅读器</a> &#8211; <a href=\"http://weibo.com/williamlong\">新浪微博</a> &#8211; <a href=\"http://t.qq.com/williamlong\">腾讯微博</a> <br />月光博客投稿信箱：williamlong.info(at)gmail.com</p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=738338\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"738338\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":176,"categories":[9203],"tags":[]}