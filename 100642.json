{"id":100642,"link":"https://chinadigitaltimes.net/chinese/2010/08/shirky’s-law和一些思考/","date":"2010-08-25T21:35:25Z","modified":"2010-08-25T21:35:25Z","title":"Shirky’s Law和一些思考","content":"<p><p>来自: <a href=\"http://www.feedzshare.com/b/9563/2\">我blog故我在 &#8211; FeedzShare</a>  <br />\n<br />发布时间:2010年08月25日,  已有 6 人推荐 </p>\n<hr>\n<div>\n<p><p>今天又同时推荐了一篇文章： <a href=\"http://michaelnielsen.org/blog/shirkys-law-and-why-most-social-software-fails/\">Shirky’s Law and why (most) social software fails</a> 其核心观点是那些成功的social networking service往往有一个非常简单的构思(mental model)并且被用户普遍地认同。而相反，往往很多服务因为添加了太多的特性和功能而模糊了其用户心目中的印象。</p>\n<p>我非常认同这篇文章的基本观点，事实上，作为在这方面经历了很多教训的我来说，我极为赞同。文章特别提到: “简单”主要表现为概念和用户体验方面，而实现这些看似简单的功能和极其容易的用户体验，其背后的算法和实现其实可能非常复杂。  </p>\n<p>文章中谈到了developer的一些思维特点导致容易犯错误的因素，有其合理的解释当时往往一个产品和服务的推出，并不只是developer的问题。developer, project manager/product manager/program manager(无论什么叫法), 以及整个项目、团队的管理者其实有更多的责任。 对于一个较大的team，比如Microsoft的项目，无疑leadership team是关键 &#8212; 如果leadership team能理解这种原则，那么就不会任由PM, Dev们来搞出一堆的features. 然而如果leadership看的是feature的个数，“idea”的多少，并且以此来评估项目和promte人才，那么必然造就大量features无数却不好使的怪胎。 </p>\n<p>从我自身过去的项目教训来看，我觉得我自己没有能认识到这点是关键所在，其他的任何直接和间接的原因都是在此基础上而产生出来的。 </p>\n<p>我发现startup公司和团队往往比成熟的公司能更好地处理这个问题，其原因往往并非是他们更“聪明”而是因为资源的缺乏，由于缺乏资源，所以必须有所取舍、必须有所不为，必须简单，必须慢慢来，结果就对了。 相反有钱有人的公司，大把钱、队伍、人砸下去，再加上层层的管理、复杂的业绩评估，更容易搞出复杂无比的东西。 这就是startup和成熟公司的一个先天优势。 值得反思的是，这些优点曾经是所有人都在某个时候曾经有意无意地具备的，变得更大的时候，这些宝贵的东西无声无息地失去了，甚至没有人察觉。</p>\n</p>\n</div>\n<p><img src=\"http://img.tongji.linezing.com/1017243/tongji.gif\" /><img src=\"http://img.tongji.linezing.com/997968/tongji.gif\" /></p>\n<p>“要翻墙，<a href=\"http://idiaoyuzhifa.info\" target=\"_blank\">用赛风”</a>.</p>\n","author":176,"categories":[1],"tags":[8800]}