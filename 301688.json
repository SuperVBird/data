{"id":301688,"link":"https://chinadigitaltimes.net/chinese/2013/07/编程随想-如何保护隐私3：关于浏览器的防范（中/","date":"2013-07-01T11:01:50Z","modified":"2013-07-01T11:01:50Z","title":"编程随想 | 如何保护隐私[3]：关于浏览器的防范（中）","content":"<p>　　今天这篇，主要介绍浏览器 Cookie 方面的防范。</p>\n<h2>★什么是&#8221;cookie&#8221;？</h2>\n<p>\n　　本文所说的&#8221;cookie&#8221;，指的是浏览器相关的 cookie（也叫&#8221;HTTP cookie&#8221;）。<br />\n　　浏览器 cookie   的主要功能是：帮助网站保存一些小片段的信息。比如，你曾经在自己的浏览器上登录过某个论坛，下次你再打开论坛的登录页面，你会发现用户名已经帮你填好  了，你只需要输入口令即可。那么，这个登录页面是如何知道你上次登录用的账户名捏？奥妙就在于：该网站在你的浏览器端保存了一个   cookie，里面包含了你上次登录使用的帐号名称。</p>\n<h2>★Cookie 的技术实现</h2>\n<p>\n　　本章节面向懂技术的网友。不太懂技术的读者，可以略过本节，直接进入下一章节，以免浪费时间。</p>\n<h3>◇网站如何设置 cookie（写操作）</h3>\n<p>\n　　1<br />\n　　当你在浏览器中点某个书签、或者在浏览器地址栏输入某个网址，浏览器会向对应的网站发起一个 HTTP 请求（术语是 HTTP Request）。<br />\n　　2<br />\n　　然后，网站的服务器收到这个 HTTP 请求之后，会把相应的内容（比如网页、图片、等）发回给浏览器（这称为 HTTP 响应，术语是 HTTP Reponse）。<br />\n　　如果网站想设置 cookie，就在发回的 HTTP Response 中，包含一个设置 cookie 的指令。举例如下：</p>\n<blockquote><p>Set-Cookie: user=xxxx; Path=/; Domain=www.example.com</p></blockquote>\n<p>　　上述这个例子中，设置了一个 cookie，cookie 名是 user，cookie 值是 xxxx<br />\n　　3<br />\n　　浏览器在收到这个指令后，就会在你的电脑中存储该 cookie 的信息。</p>\n<h3>◇网站如何获取 cookie（读操作）</h3>\n<p>\n　　假设过了几天之后，你再次访问上述的 www.example.com 网站（在上次的访问中，已经被设置过 cookie 了）。这时候，浏览器发现该网址已经有对应的 cookie，就会把 cookie 的信息放在 HTTP Request 中，然后发送到网站服务器。具体的指令如下：</p>\n<blockquote><p>Cookie: user=xxxx</p></blockquote>\n<p>　　网站服务器拿到这个 HTTP Request 之后，就可以通过上述信息，知道 cookie 的&#8221;名&#8221;和&#8221;值&#8221;。</p>\n<h2>★Cookie 的特点</h2>\n<p></p>\n<h3>◇存储信息量小</h3>\n<p>\n　　cookie 在洋文中的意思就是：小甜饼、曲奇饼。这个单词其实已经暗示了 cookie 技术所能存储的信息量是比较小滴。<br />\n　　从刚才的技术实现机制可以看出，cookie 只能用来存储纯文本信息，而且存储的内容不能太长——因为 Cookie 的读写指令受限于 HTTP Header 的长度。<br />\n　　但是，cookie 的信息量虽小，能耐却很大哦。请看下面的例子。</p>\n<p>　　<b>举例</b><br />\n　　比如某个网站上有很多网页，每个网页上有很多广告。该网站想要收集：每一个访客点击了哪些广告。<br />\n　　由于这些信息量比较大，直接存储在 cookie 里可能放不下。所以，网站通常是在 cookie 中保存一个<b>唯一的用户</b>标识。然后把用户的点击信息（包括在哪个时间点击哪个广告）都存储在服务器上。<br />\n　　下次你再访问该网站，网站先拿到 cookie 中的用户标识，因为这个标识具有唯一性，那么就可以根据该标识，从网站服务器上查出该用户的详细信息。</p>\n<h3>◇绑定到域名和路径</h3>\n<p>\n　　从上述的实现机制可以看出，cookie 是跟 HTTP Request 对应的网址（域名和路径）相关的。<br />\n　　所以，不同域名的网站设置的 cookie 是互相独立的（隔离的）。这一点由浏览器来保证，以确保安全性。<br />\n　　补充一下：cookie 绑定的域名可以是小数点开头的。举例如下：<br />\nSet-Cookie: user=xxxx; Path=/; Domain=.example.com<br />\n　　这个指令设置的 cookie，可以被 example.com 的<b>所有</b>下级域名读取（比如 www.example.com 或 ftp.example.com）。</p>\n<h2>★Cookie 的类型</h2>\n<p></p>\n<h3>◇第一方 Cookie VS 第三方 Cookie</h3>\n<p>\n　　首先来说说&#8221;第一方&#8221;和&#8221;第三方&#8221; Cookie 的区别，因为这跟隐私的关系比较密切。<br />\n　　要说清楚 第一方 Cookie 和 第三方 Cookie 的差别，俺来举个例子。</p>\n<p>　　<b>举例</b><br />\n　　比如你上新浪去看新闻，而新浪的网页上嵌入了阿里巴巴的广告。<br />\n　　那么，当你的浏览器加载完页面之后，浏览器中可能会同时存在新浪网站的 cookie 和 阿里巴巴网站的 cookie<br />\n　　这时候，新浪网站的 cookie 称为&#8221;第一方 Cookie&#8221;（因为你访问的就是新浪嘛）<br />\n　　相对的，阿里巴巴的 cookie 称为&#8221;第三方 Cookie&#8221;（因为你访问的是新浪，阿里巴巴只是不相干的第三方）</p>\n<h3>◇内存型 VS 文件型</h3>\n<p>\n　　根据存储方式的不同，分为两类：基于内存的 Cookie 和 基于文件的Cookie。基于内存的 cookie，当浏览器关闭之后，就消失了；而基于文件的 cookie，即使浏览器关闭，依然存在于硬盘上。和隐私问题相关的 cookie，主要是第二类（基于文件的Cookie）。</p>\n<h2>★Cookie 有啥正经用途？</h2>\n<p>\n　　今年的315晚会，央视猛烈抨击了 cookie 的隐私问题，搞得好像 cookie 是洪水猛兽一般。CCAV 对 cookie 的妖魔化宣传，典型是用来吓唬不懂技术的外行。<br />\n　　其实捏，cookie 是有利有弊的。cookie 之所以应用这么广泛，因为它本身确实是很有用的。请看下面的几个例子。</p>\n<h3>◇举例1——自动登录</h3>\n<p>\n　　目前很多基于 Web 的邮箱，都有自动登录功能。也就是说，你第一次打开邮箱页面的时候，需要输入用户名和口令；过几天之后再来打开邮箱网页，就不需要再次输入用户名和口令了（比如 Gmail 和 Hotmail 就是这样的）。<br />\n　　为啥邮箱可以做到自动登录，就是因为邮箱的网站在你的浏览器中保存了 cookie，通过 cookie 中记录的信息来表明你是已登录用户。</p>\n<h3>◇举例2——提供个性化界面</h3>\n<p>\n　　比如某个论坛允许匿名用户设置页面的字体样式和字体大小。<br />\n　　那么，该论坛就可以把匿名用户设置的字体信息保存在 cookie 中，下次你用同一个浏览器访问该论坛，自动就帮你把字体设置好了。</p>\n<h3>◇小结</h3>\n<p>\n　　一般来说，有正经用途的 cookie，大都是&#8221;第一方 Cookie&#8221;；至于&#8221;第三方 Cookie&#8221;，大部分是用来收集广告信息和用户行为的。</p>\n<h2>★Cookie 如何泄漏隐私？</h2>\n<p>\n　　cookie 就像一把双刃剑，有很多用途，但也有弊端。一个主要的弊端就是隐私问题。</p>\n<h3>◇举例1</h3>\n<p>\n　　假如你同时使用 Google 的 Gmail 和 Google 的搜索（很多 Google 用户都这么干）。当你登录过 Gmail 之后，cookie 中会保存你的用户信息（标识你是谁）；即使你在 Gmail 中点了注销（logout），cookie 中还是会有你的用户信息。<br />\n　　之后，你再用 Google 的搜索功能，那么 Google 就可以通过 cookie 中的信息，知道这些搜索请求是哪个 Gmail 用户发起的。</p>\n<p>　　可能有些同学会问，Gmail 和 Google 搜索，是不同的域名，如何共享 cookie 捏？<br />\n　　俺前面有介绍过，某些 cookie 绑定的域名是以小数点开头的，也就是说，这类 cookie 可以被所有下级域名读取。<br />\n　　因为 Gmail 的域名是 mail.google.com，而 Google 搜索的域名是 www.google.com。所以这两者都可以读取绑定在 .google.com 的 cookie！</p>\n<p>　　注：俺拿 Google 来举例是因为俺博客的读者，大部分都是 Google 用户。其实不光 Google 存在此问题，百度、腾讯、阿里巴巴、奇虎360、等等，都存在类似问题（这几家都有搜索功能，也都有自己的一套用户帐号体系）。</p>\n<h3>◇举例2</h3>\n<p>\n　　网站方会利用 cookie 来追踪你访问该网站的行为（包括你多久来一次，每次来经常看哪些页面，每个页面的停留时间）<br />\n　　这样一来，网站方面就可以根据这些数据，分析你的个人的种种偏好（这就涉及到个人隐私）。</p>\n<p>　　请注意：利用 cookie 收集个人隐私的把戏有很多，俺限于篇幅，仅列出上述两例。</p>\n<h2>★浏览器禁用 Cookie 的几种方法</h2>\n<p>\n　　在<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/06/privacy-protection-2.html\">本系列的前一篇</a>，  俺已经分析了：Firefox 是主流浏览器中，隐私方面比较靠谱的（完全开源、没有商业背景）。相对于 Firefox，Chrome   只是部分开源，而且 Google 的商业模式太依赖广告，不会为隐私保护而得罪广告主；至于 IE，根本不开源，自身的安全性也不够。<br />\n　　所以，本小节下面的内容，主要拿 Firefox 来说事儿。如果你是 Chrome 的粉丝，不想换 Firefox，也没关系。这两款浏览器的某些功能大同小异，你可以参考本章节的介绍，然后在 Chrome 上依样画葫芦。</p>\n<h3>◇只禁用第三方 Cookie</h3>\n<p>\n　　前面说了，大部分&#8221;第三方 Cookie&#8221;都不是干正经事儿的。所以，最简单也是最宽松的设置，就是光禁用&#8221;第三方 cookie&#8221;。</p>\n<p>　　配置方法和截图如下：<br />\n　　在 Firefox 主菜单点&#8221;工具&#8221;，再点&#8221;选项&#8221;。在弹出的选项对话框中，选&#8221;隐私&#8221;标签页。<br />\n　　在界面的第一个下拉框中选择&#8221;使用自定义历史记录设置&#8221;<br />\n　　选完下拉框，你会看到一个复选框叫&#8221;接受第三方 Cookie&#8221;，<b>去掉</b>这个复选框的打勾。<br />\n<img src=\"http://lh6.googleusercontent.com/GJzSlsOnwLZJfy1M3dkWU-0-Hvw7sW7XDwf_gQZ9SybX-77bHOc3xM0ziyInR528e7P8bDXexSds_euw-AWZUUiGoPS-xNF2FNSor9U0ZY5yejRpLN8IYbl4u245\" alt=\"不见图 请翻墙\" /></p>\n<h3>◇禁用所有 cookie，但保留例外（白名单）</h3>\n<p>\n　　这种方式比前一种更严格。你只保留某些你信任的网站的 cookie，其它网站统统禁用。<br />\n　　配置方法和截图如下：<br />\n　　在 Firefox 主菜单点&#8221;工具&#8221;，再点&#8221;选项&#8221;。在弹出的选项对话框中，选&#8221;隐私&#8221;标签页。<br />\n　　在界面的第一个下拉框中选择&#8221;使用自定义历史记录设置&#8221;<br />\n　　选完下拉框，你会看到一个复选框叫&#8221;接受来自网站的 Cookie&#8221;，<b>去掉</b>这个复选框的打勾。<br />\n　　然后到该复选框右侧，点&#8221;例外&#8221;按钮，把你信任的网站域名输入进去。<br />\n<img src=\"http://lh3.googleusercontent.com/MZ1NihopvgmG_FrHnavEGYjX1BKrm3E-h7GEa78mYLfTFHVwx7VY8jM_GFtw2zN3gTeCQH1Cq1Cq3K9vqY7-OExOgd0_eF_0_lzfXJlBWvdsKfwofgZz7quEa7s\" alt=\"不见图 请翻墙\" /></p>\n<h3>◇始终用隐私浏览模式</h3>\n<p>\n　　关于&#8221;隐私浏览模式&#8221;，在<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/06/privacy-protection-2.html\">本系列的前一篇</a>已经介绍过了，此处不再啰嗦。<br />\n　　相比前两个招数，这招最严格。在隐私浏览模式下，浏览器关闭之后，期间所有的 cookie 都消失。<br />\n　　但是，这样设置也可能带来一些不方便之处（安全性和方便性通常是截然对立）。你可能要先尝试一段时间，看看自己能否忍受这种模式。</p>\n<p>　　配置方法和截图如下：<br />\n　　在 Firefox 主菜单点&#8221;工具&#8221;，再点&#8221;选项&#8221;。在弹出的选项对话框中，选&#8221;隐私&#8221;标签页。<br />\n　　在界面的第一个下拉框中选择&#8221;使用自定义历史记录设置&#8221;<br />\n　　选完下拉框，你会看到一个复选框叫&#8221;始终使用隐私浏览模式&#8221;，<b>勾上</b>这个复选框。<br />\n打勾之后，Firefox 会提示你重启浏览器。<br />\n<img src=\"http://lh4.googleusercontent.com/KJNGaP3kThZTwB2_nqDR38Yz1F0phVDeL5pEg6oQNuirk3hWqC_0wLYoZu4zhtbD3BKpN31WxmszClX6M9M7tvgK7vD09SwUKTOS69EHTyt8kypdaOmpekjatWQ\" alt=\"不见图 请翻墙\" /></p>\n<h3>◇小结</h3>\n<p>\n　　刚才介绍的几招，都是针对单个浏览器 。大部分情况下是够用了。但是某些特殊情况，还是会搞不定。<br />\n　　比如：你经常用 Gmail，而且依赖于 Gmail 的自动登录。这时候，你就不能禁用 .google.com 域名下的 cookie（禁用了就无法自动登录 Gmail）。<br />\n　　但是，你在用 Google 搜索的时候，又不希望让 Google 知道你是谁。咋办捏？请听下回分解——用多浏览器搭配不同的招数。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/06/privacy-protection-0.html#index\">回到本系列的目录</a><img src=\"http://feeds.feedburner.com/~r/programthink/~4/Neq4-vXiuoY\" height=\"1\" width=\"1\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<p><iframe src=\"https://docs.google.com/spreadsheet/embeddedform?formkey=dGRpN3FrVThuMFFsZHBZcmNGLW94dEE6MQ\" width=\"450\" height=\"309\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading&#8230;</iframe></p>\n<form method=\"POST\" action=\"http://chinadigitaltimes.us4.list-manage.com/subscribe/post?u=17daa75df533f6c6ff72e51ab&#038;id=2ea93c5b7b\">\n<a href=\"http://eepurl.com/msuvD\">墙外新闻实时更新 欢迎订阅数字时代</a><br />\n <br /><input type=\"email\" value=\"\" name=\"EMAIL\" id=\"mce-EMAIL_in_post\" size=\"25\" style=\"display:block;\" placeholder=\"请输入您的邮件地址\" required><br />\n\t<input type=\"submit\" value=\"点击订阅\" name=\"subscribe\" style=\"height: 20px;\" id=\"in_post_subscribe\"><br />\n</form>\n","author":1004,"categories":[18270,18269,9203],"tags":[9400]}