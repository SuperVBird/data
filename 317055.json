{"id":317055,"link":"https://chinadigitaltimes.net/chinese/2013/10/编程随想-truecrypt-使用经验4：关于隐藏卷的使用和注意/","date":"2013-10-08T14:48:28Z","modified":"2013-10-08T14:48:28Z","title":"编程随想 | TrueCrypt 使用经验[4]：关于隐藏卷的使用和注意事项","content":"<p>　　前阵子比较忙，十一长假又有事情，导致10多天没发博文也没回复读者留言，害得不少热心读者以为俺被跨省了。今天赶紧发篇博文，向列位看官报个平安。<br />\n　　刚才扫了一眼这几天的留言，非常感激大伙儿对俺的关心！看来俺得多努力，以示回报。<br />\n　　关于 TrueCrypt 的高级话题，第4篇咱们来聊一下&#8221;隐藏卷&#8221;的技术细节和注意事项。</p>\n<h2>★啥是隐藏卷？</h2>\n<p>\n　　所谓的隐藏卷，就是在一个加密卷里面再创建一个加密卷。外层的那个加密卷是&#8221;明&#8221;的（也叫&#8221;宿主卷&#8221;）；内层的那个，是&#8221;暗&#8221;的（叫&#8221;隐藏卷&#8221;）。这两个加密卷必须使用不同的认证因素（不同的口令或不同的 KeyFiles）。在物理上，你只能看到外层的加密文件或加密分区，内层的卷，是没有独立文件或独立分区的。<br />\n　　当你要打开加密卷的时候，如果输入的是外层的认证因素（口令、KeyFiles），那就打开外层的卷（这时候看不到内层的数据）；反之，输入内层的认证因素，则打开内层的卷（这时候看不到外层的数据）。<br />\n　　隐藏卷的存储示意图如下（技术上就是利用外层卷的剩余空间来存储内层卷的数据）：<br />\n<img src=\"http://blob-s-docs.googlegroups.com/docs/OQAAAHgzNOjhkY_xc3symnXLyr8o_E40o6UEdH4gRScOkzv1CkbnPNgFK8rZxon9okbNhudsybv1RD-VohXEafJR3HQA15jOjPvEm-yR4zGEwNyJ2cJKlKGJfy7y\" alt=\"不见图 请翻墙\" /></p>\n<h2>★隐藏卷有啥用？</h2>\n<p>\n　　隐藏卷最大的好处在于：可以做到&#8221;Plausible Deniability&#8221;。这个洋文找不到贴切的中文对应。有人翻译为：&#8221;冠冕堂皇地拒绝&#8221;，俺觉得不够贴切。为了便于大伙儿理解，稍微解释一下使用&#8221;Plausible Deniability&#8221;的场景。</p>\n<p>　　首先大伙儿应该明白一点——TrueCrypt 的加密卷是非常牛B滴（本系列前面几篇已经聊过了）。只要你设置的口令够复杂，尤其再配合 KeyFiles，TrueCrypt 加密卷是无法破解的。TrueCrypt 之强悍，连美国佬的 FBI 都没辙（前几年有活生生的案例）。<br />\n　　但是别忘了安全界的一句老话——&#8221;越是安全的系统，<b>人</b>越成为主要的弱点&#8221;（如果你看过俺写的<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2009/05/social-engineering-0-overview.html\">&#8220;社会工程学&#8221;系列博文</a>，对此应该有体会）。<br />\n　　虽然 TrueCrypt 加密盘很牛B，但某些攻击者（比如天朝的公安）可以采用某些手段（比如威胁你家人，比如刑讯逼供）逼迫你交出加密盘的口令/KeyFiles。那么，该如何应对&#8221;胁迫&#8221;捏？这时候，TrueCrypt 的隐藏卷就派上用场啦。<br />\n　　当你一开始制作加密盘（加密卷）的时候，可以在加密卷中设置一个隐藏卷。按照通常的经验，你要把最敏感最重要的数据放在内层卷（隐藏卷），把相对不太重要的数据放在外层卷。一旦遭遇胁迫，你就装出一副很无奈的样子，很不情愿地把外层卷的口令告诉对方。这时候，外层卷虽然暴露了，但是内层的隐藏卷并没有暴露。这就是&#8221;Plausible Deniability&#8221;的使用场景。</p>\n<h2>★隐藏卷 VS 嵌套卷</h2>\n<p>\n　　这两个概念，可能某些同学会混淆，俺稍微澄清一下。<br />\n　　所谓的&#8221;嵌套卷&#8221;，就是把一个小的加密卷存放到另一个大的加密卷内部。打个比方，如同一个大的压缩文件中还包含一个小的压缩文件。</p>\n<p>　　表面上看，&#8221;嵌套卷&#8221;跟&#8221;隐藏卷&#8221;有相似之处；其实捏，两者有本质的区别。<br />\n　　最关键的差别是：<br />\n<b>对于&#8221;嵌套卷&#8221;，只要能打开外层卷，就可以看到内层卷。<br />\n对于&#8221;隐藏卷&#8221;，即使能打开外层卷，也无法判断是否存在隐藏卷。</b><br />\n上述差异导致：<b>&#8220;嵌套卷&#8221;无法做到&#8221;Plausible Deniability&#8221;，而&#8221;隐藏卷&#8221;可以</b>。这也是&#8221;隐藏卷&#8221;相比&#8221;嵌套卷&#8221;的最主要优点。</p>\n<p>　　设想一下，如果你遭到胁迫，攻击者知道你使用了 TrueCrypt 加密，并且逼迫你打开加密卷。<br />\n<b>如果你使用的是&#8221;嵌套卷&#8221;</b><br />\n打开外层卷之后，攻击者可能会找到存放在&#8221;外层卷&#8221;里面的&#8221;内层卷&#8221;。就可以继续胁迫你开启&#8221;内层卷&#8221;<br />\n<b>如果你使用的是&#8221;隐藏卷&#8221;</b><br />\n打开外层卷之后，（除非你的设置有缺陷，否则）攻击者<b>无法判断</b>该加密卷内部是否存在隐藏卷。<br />\n（如果避免设置的缺陷，俺下面会聊）</p>\n<h2>★如何创建隐藏卷</h2>\n<p>\n　　大致需要如下几个步骤：</p>\n<h3>◇步骤1</h3>\n<p>\n　　先创建一个普通的加密卷（这个应该不用俺再教了吧？）这个加密卷是用来作为外层卷（也就是&#8221;幌子&#8221;）。<br />\n　　外层卷可以是物理加密盘（某个加密分区），也可以是虚拟加密盘（某个加密文件）。<br />\n　　关于&#8221;物理加密盘&#8221;和&#8221;虚拟加密盘&#8221;的差异、优缺点，本系列<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/08/truecrypt-1.html\">前面的博文</a>已经聊过，这里就不再浪费口水了。</p>\n<h3>◇步骤2</h3>\n<p>\n　　创建好外层卷之后，你需要在外层卷放置一些<b>相对不太重要</b>的文件作为幌子以掩人耳目。<br />\n　　怎样才算是&#8221;相对不太重要&#8221;捏？下面的&#8221;注意事项&#8221;章节会提到。</p>\n<h3>◇步骤3</h3>\n<p>\n　　在刚才那个普通加密卷的基础上，再创建一个&#8221;隐藏加密卷&#8221;。这个隐藏加密卷，就隐藏在普通加密卷的空闲磁盘空间里面。<br />\n　　TrueCrypt 提供一个比较傻瓜化的向导，可以帮你一步步地在普通加密卷（外层卷）中创建一个隐藏加密卷（内层卷）。<br />\n　　这个步骤其实不难，大伙儿应该能搞定。这里就不放界面截图了。搞不定的同学，可以到俺博客留言。如果很多人搞不定，俺再补上界面截图。</p>\n<h2>★隐藏卷的三种使用模式</h2>\n<p>\n　　如果某个加密卷包含有隐藏卷，那么该加密卷就会有三种不同的使用模式。<br />\n　　很多使用 TrueCrypt 的同学都没彻底搞明白隐藏卷的这三种操作模式。所以俺特地用一个章节的篇幅，来说明这三种模式的差异和应用场景。</p>\n<h3>◇模式1：只打开内层的隐藏卷，外层卷不可见</h3>\n<p>\n　　<b>认证过程</b><br />\n　　打开加密卷的时候，<b>仅仅输入</b>内层卷的认证因素（口令、KeyFiles）。这时候 TrueCrypt 会自动帮你加载内层卷。</p>\n<p>　　<b>说明</b><br />\n　　这是最常用的模式。因为外层卷只是一个掩人耳目的幌子，显然，你日常的大部分操作都是在&#8221;内层的隐藏卷&#8221;中进行。</p>\n<h3>◇模式2：只打开外层卷，内层卷不可见，对隐藏卷进行写保护</h3>\n<p>\n　　<b>认证过程</b><br />\n　　可以有两种认证方式：<br />\n　　1. 打开加密卷的时候，<b>仅仅输入</b>外层卷的认证因素（口令、KeyFiles），同时勾选&#8221;Read Only&#8221;选框。<br />\n　　使用这种方式，整个加密卷（包括内层和外层）都是只读模式，自然也就不会破坏内层卷的数据。但因为是只读模式，所以只能浏览外层卷的文件，无法进行修改（写操作）。</p>\n<p>　　2. 打开加密卷的时候，<b>同时输入</b>外层卷和内层卷的认证因素（口令、KeyFiles）。<br />\n　　使用这种方式，你可以对外层卷进行写操作（比如增加、删除文件，修改文件内容、等等）<br />\n　　因为你同时输入内外两层卷的认证因素，TrueCrypt 软件自然就知道这个加密卷是含有&#8221;隐藏卷&#8221;的。所以，在这种模式下，TrueCrypt 会暗中对隐藏卷所在的磁盘区域进行写保护。（这种写保护是在文件系统驱动的层面进行的，你使用的应用软件感觉不出来）。<br />\n　　假设说，你企图往外层卷写入大量的数据，并且写入的数据会覆盖到隐藏卷所在的磁盘区域，这时候 TrueCrypt 会屏蔽这些&#8221;磁盘写操作&#8221;，同时你会看到一个提示&#8221;写入失败&#8221;。</p>\n<p>　　<b>说明</b><br />\n　　一般情况下不需要使用这种模式。除非你想调整外层卷的数据，再使用这种模式。<br />\n　　可能有的同学会问：&#8221;外层卷的内容只是掩人耳目的幌子，难道需要经常调整吗？&#8221;关于这个问题，在后续的&#8221;注意事项&#8221;章节，俺会详细介绍。什么情况下需要调整外层卷的数据，以加强隐藏卷的隐蔽性。</p>\n<h3>◇模式3：只打开外层卷，内层卷不可见，不对隐藏卷进行写保护</h3>\n<p>\n　　<b>认证过程</b><br />\n　　打开加密卷的时候，光输入外层卷的认证因素（口令、KeyFiles）。<br />\n　　TrueCrypt 会自动帮你加载外层卷。这时候 TrueCrypt <u><b>不会</b></u>对内层卷进行暗中保护。<br />\n　　请注意：如果你不给出隐藏卷的口令，连 TrueCrypt 自己也无法判断是否存在隐藏卷。</p>\n<p>　　<b>说明</b><br />\n　　再罗嗦一下，处于这种模式下，TrueCrypt 不会对隐藏卷进行写保护。所以这种操作模式是有风险的——当你在操作外层卷的时候，可能会无意中破坏隐藏卷存储的数据。<br />\n<u><b>平常使用的时候，千万不要用这种模式。只有当你遭到胁迫的时候，才使用这种模式</b></u>。<br />\n　　套用一下安全的专业术语。当你使用这种模式，其实是通过牺牲&#8221;可用性&#8221;来换取&#8221;保密性&#8221;。对于大多数 TrueCrypt 用户而言，&#8221;保密性&#8221;显然比&#8221;可用性&#8221;重要得多</p>\n<h2>★使用隐藏卷的注意事项</h2>\n<p>\n　　本章节大伙儿要看仔细喽。即使是某些懂安全的网友，可能也会忽略下面提到的某些细节。</p>\n<h3>◇受胁迫的时候，千万别搞错模式</h3>\n<p>\n　　当你受到胁迫的时候，务必使用第三种模式——只输入外层卷的认证因素。如果这时候你因为慌乱，搞错了，输入了内层卷的认证因素（口令、KeyFiles），内层隐藏卷的数据自然就暴露了。<br />\n　　再强调一遍：受到胁迫的时候，<b>绝对不能</b>使用第一种模式和第二种模式，<b>必须使用</b>第三种模式。一旦搞错，前功尽弃。</p>\n<h3>◇关于空闲空间的比例问题</h3>\n<p>\n　　前面介绍了，隐藏卷是位于外层卷的空闲空间中。比方说，你的外层卷总共 10GB，已经用掉 8GB，空闲空间只有 2GB。那么，你在这个外层卷里面创建隐藏卷，隐藏卷尺寸的<b>上限</b>就是 2GB（很多时候，上限远达不到 2GB，具体看外层卷的文件系统类型）。<br />\n　　如果你的外层加密卷很大，但是只使用了一丁点空间（比如 100GB 加密卷只用了 1GB），那么攻击者就会起疑心——怀疑这个加密卷包含有隐藏卷。所以，你需要适当平衡一下，在外层加密卷中放置足够多的&#8221;幌子文件&#8221;，占到一定比例的空间，才不至于引起怀疑。</p>\n<h3>◇关于&#8221;幌子文件&#8221;的重要性问题</h3>\n<p>\n　　前面俺提到，放置在外层卷的&#8221;幌子&#8221;，必须是<b>相对不太重要</b>。所谓的&#8221;<b>相对不太重要</b>&#8220;，就是说有一定的重要性，但是重要性远远不如隐藏卷中的数据。<br />\n　　为啥俺特地强调这点捏？如果你放在外层卷的&#8221;幌子&#8221;是一些完全不重要的文件，就显得太假了。一旦你遭到胁迫，交出外层卷的密码，攻击者打开外层卷之后，发现里面都是一些鸡毛蒜皮的文件，自然会起疑心——为啥你把鸡毛蒜皮的文件用 TrueCrypt 加密？<br />\n　　所以，放在外层加密卷的文件，必须有适当的重要性；但重要性要远远低于放在隐藏卷里面的重要性。</p>\n<h3>◇关于备份的注意事项</h3>\n<p>\n　　大部分人放在加密盘里面的数据，都是重要数据。重要数据，自然有备份的需要（以免硬盘坏，电脑被盗、等等）。<br />\n　　如果你要备份含有隐藏卷的加密盘，要记得如下两条安全措施：<br />\n<b>在每次备份之前，先随意地修改外层卷的文件</b><br />\n或者<br />\n<b>每次备份之前，都先 重建 一个新的加密盘，然后分别COPY外层卷和内层卷的文件到新的加密盘对应的内外卷</b></p>\n<p>　　这两条措施，二选一。前者操作简单，但安全性不够强；后者操作麻烦，但安全性更好。<br />\n　　为啥要有这两条防范措施捏？主要是为了对付&#8221;差分攻击&#8221;。&#8221;差分攻击&#8221;是一个信息安全的术语，&#8221;差分&#8221;指的是&#8221;差异分析&#8221;。为了让大伙儿明白，说一个针对加密盘进行差分攻击的场景。（这个例子有点复杂，不太懂技术的同学可能要多看几遍，才能看明白）</p>\n<blockquote><p>假设你使用了基于文件的虚拟加密盘，并且在其中设置了隐藏卷。<br />\n按照惯例，你在外层卷中放置了一些无关痛痒的文件，把机密信息放到隐藏卷。<br />\n平时，你经常需要打开隐藏卷，修改里面的内容。<br />\n由于外层卷的文件只是掩人耳目的幌子，所以你一直没有修改过外层卷的文件内容。<br />\n为了防止硬盘故障，你定期把这个虚拟加密盘备份到家中的U盘上。</p>\n<p>有一天，朝廷的六扇门找到你，并且发现你在使用 TrueCrypt 加密盘。于是六扇门的人逼迫你交出加密盘的口令。<br />\n于是捏，你就假装交出外层卷的口令（反正外层卷存放的东西不重要，无所谓）。</p>\n<p>如果故事到此为止，貌似天衣无缝。</p>\n<p>但是，因为你曾经备份过U盘，六扇门搜查你家，发现了你备份加密盘的 U盘。<br />\n这时候，六扇门里面搞&#8221;信息取证&#8221;的技术人员就可以把两个加密盘（一个是U盘里面的，一个是你电脑上的）拿来做比对（也就是&#8221;差异分析&#8221;）<br />\n前面俺介绍过，隐藏卷实际上是存放在外层卷的<b>空闲磁盘空间</b>。<br />\n由于你始终没有修改过外层卷，这时候就露出破绽了。<br />\n啥破绽捏？<br />\n你之前交出了外层卷口令，取证人员可以打开外层卷，读取外层卷那些&#8221;幌子文件&#8221;。然后，取证人员会发现：这两个加密盘，加密密钥是一样的，里面存放的文件也是一模一样的（因为外层卷你一直没改动过）。但是空闲区域的内容却有很大的不同。（<b>这显然是很不正常的——这就是破绽</b>）。<br />\n有经验的取证人员，单凭这点就可以推断——这个加密盘的空闲区域有猫腻！<br />\n这时候，虽然取证人员还无法知道隐藏卷的内容（因为他们还没有口令/KeyFiles），但是，他们已经可以断定：你使用了隐藏卷。<br />\n换句话说，你的隐藏卷已经被察觉了。接下来，六扇门的人就会开始胁迫你交出隐藏卷的口令/KeyFiles。</p></blockquote>\n<p>\n　　这个例子稍微有点复杂， 不知你看懂了没有？没看懂也没关系。反正你要记得前面提到的那两条防范措施。</p>\n<h3>◇受胁迫时的演技</h3>\n<p>\n　　俗话说得好：<b>使用隐藏卷，演技很关键</b>。所以最后再说说&#8221;演技&#8221;的问题——当你受到胁迫，要求你交出加密盘的密码或KeyFiles，请注意你的演技。<br />\n　　坦白说，这方面俺没有太多经验啦——毕竟俺没当过演员 :) 所以暂列两条，算是抛砖引玉。<br />\n1. 不能太轻易就交出——这样显得太假<br />\n2. 一定要装出一副很不情愿、很无奈的神情</p>\n<p>　　如果你演技不好，又想对付&#8221;胁迫&#8221;，咋办捏？还有一个绝招，就是前面博文介绍过的&#8221;KeyFiles 认证&#8221;。<br />\n　　这个绝招可以让世界上所有的酷刑逼供失效。但是有两个前提：<br />\n1、你必须使用<b>随机生成的</b> KeyFiles，并且用这些 KeyFiles 做加密盘的认证因素（如何随机生成 KeyFiles，<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/08/truecrypt-2.html\">俺之前介绍过</a>）<br />\n2、你在被胁迫之前，必须<b>彻底销毁</b> KeyFiles（包括 KeyFiles 的备份）<br />\n　　因为随机生成的 KeyFiles，其内容连你自己也不知道。一旦彻底销毁，连你自己都无法打开加密盘。酷刑逼供自然也就失效啦。</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/recommend-truecrypt.html#index\">回到本系列目录</a></p>\n<p><b>俺博客上，和本文相关的帖子（需翻墙）</b>：<br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/recommend-truecrypt.html\">TrueCrypt——文件加密的法宝</a><br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/file-encryption-overview.html\">文件加密的扫盲介绍</a><br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/02/file-integrity-check.html\">扫盲文件完整性校验——关于散列值和数字签名</a><img src=\"http://feeds.feedburner.com/~r/programthink/~4/6aV_BbXvzzg\" height=\"1\" width=\"1\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<p><iframe src=\"https://docs.google.com/spreadsheet/embeddedform?formkey=dGRpN3FrVThuMFFsZHBZcmNGLW94dEE6MQ\" width=\"450\" height=\"309\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading&#8230;</iframe></p>\n<form method=\"POST\" action=\"http://chinadigitaltimes.us4.list-manage.com/subscribe/post?u=17daa75df533f6c6ff72e51ab&#038;id=2ea93c5b7b\">\n<a href=\"http://eepurl.com/msuvD\">墙外新闻实时更新 欢迎订阅数字时代</a><br />\n <br /><input type=\"email\" value=\"\" name=\"EMAIL\" id=\"mce-EMAIL_in_post\" size=\"25\" style=\"display:block;\" placeholder=\"请输入您的邮件地址\" required><br />\n\t<input type=\"submit\" value=\"点击订阅\" name=\"subscribe\" style=\"height: 20px;\" id=\"in_post_subscribe\"><br />\n</form>\n","author":1004,"categories":[18270,18269,9203],"tags":[9400]}