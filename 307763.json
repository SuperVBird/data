{"id":307763,"link":"https://chinadigitaltimes.net/chinese/2013/08/编程随想-truecrypt-使用经验1：关于加密算法和加密盘的/","date":"2013-08-06T14:31:04Z","modified":"2013-08-06T14:31:04Z","title":"编程随想 | TrueCrypt 使用经验[1]：关于加密算法和加密盘的类型","content":"<p>　　自从两年前写了《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/recommend-truecrypt.html\">TrueCrypt——文件加密的法宝</a>》，陆续收到一些网友的来信或博客留言，针对 TrueCrypt 的使用提出了一些疑问。上周发了一篇博文《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/07/online-backup-virtual-encrypted-disk.html\">文件备份技巧：组合&#8221;虚拟加密盘&#8221;和&#8221;网盘&#8221;</a>》。又收到好几个读者的留言。所以今天再发一篇博文，汇总一下俺使用的经验，顺便也解答某些的常见提问。<br />\n　　如果你之前没用过 TrueCrypt，强烈建议你先看完《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/file-encryption-overview.html\">文件加密的扫盲介绍</a>》和《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/recommend-truecrypt.html\">TrueCrypt——文件加密的法宝</a>》这两篇。</p>\n<h2>★如何选择&#8221;加密算法&#8221;？</h2>\n<p>\n　　先大致介绍一下 TrueCrypt 支持的加密算法和散列算法。然后再聊不同场合该如何选择。</p>\n<h3>◇TrueCrypt 支持哪些加密算法？</h3>\n<p>\n　　TrueCrypt 支持的加密算法有三种：AES、Twofish、Serpent。<br />\n　　AES是洋文&#8221;Advanced Encryption Standard&#8221;的缩写。该算法原名是&#8221;Rijndael&#8221;，发布于2001年。2002年被美国官方确定为新的加密标准，用来替代之前的 DES（Data Encryption Standard）。当年美国政府采用公开征集的方式，参与海选的加密算法不少。进入最后一轮的算法只有5个，分别是：MARS、RC6、Rijndael、Serpent、Twofish（按字母序排列）<br />\n　　最终是 Rijndael 入选，所以如今经常提到的 AES 指的就是 Rijndael 算法。</p>\n<h3>◇这三个算法的特点</h3>\n<p>\n　　<b>规格</b><br />\n　　当年美国政府招标 AES 算法，有提出先决条件（限定加密算法的规格）：<br />\n1. 必须是&#8221;块加密&#8221;（又称&#8221;分组密码&#8221;，洋文叫 Block Cipher）<br />\n2. 块长度必须是128位（128 比特 = 16字节）<br />\n3. 密钥长度至少支持 128/192/256 位<br />\n4. 加密强度比 Triple-DES 高，并且速度比 Triple-DES 快<br />\n　　因为存在这些竞标的约束，所以这三个算法都是块加密，也都支持 256位 的密钥长度（对同一个算法，密钥长度越大，加密强度越高）。</p>\n<p>　　<b>可靠性</b><br />\n　　在竞标 AES 的竞赛中，虽然 Twofish 和 Serpent 没有最终入选，但都是最后一轮的候选者。所以这三个算法至少在密码学层面，不会有明显的弱点。大伙儿可以放心地使用这三个算法。</p>\n<p>　　<b>强度</b><br />\n　　虽然这三个算法的规格差不多，但是在加密强度方面还是有差别的。下面是当年5个候选算法关于&#8221;安全因子&#8221;（Safety Factor）的对照表。限于篇幅，俺就不解释&#8221;安全因子&#8221;的含义了。你只需明白，安全因子越大，加密强度越高（越难破解）。</p>\n<p>算法  安全因子 <br />\nMARS　　1.90<br />\nRC6　　1.18<br />\nRijndael　　1.56<br />\nSerpent　　3.56<br />\nTwofish　　2.67</p>\n<p>　　通过&#8221;安全因子&#8221;可知三者的加密强度是：Serpent ＞ Twofish ＞ Rijndael（AES）</p>\n<p>　　某些爱刨根问底的同学会纳闷了：既然 Rijndael 的安全因子不是最好，为啥会中标？为啥不选强度最高的 Serpent？<br />\n　　因为美国国家标准局（NIST）在评估候选密码的时候，不是光看加密强度，还要考虑：性能、算法的复杂性，算法的扩展性，等等因素。Rijndael 虽然强度不是最高，但算法的灵活性较好，而且比其它几个算法简单（越简单的算法，潜在的弱点就容易被发现）。</p>\n<h3>◇加密算法的选择</h3>\n<p>\n　　TrueCrypt 不光支持上述三个算法的&#8221;单重加密&#8221;，还支持多个算法组合成&#8221;双重加密&#8221;甚至&#8221;三重加密&#8221;。总共支持如下几种排列组合：<br />\nAES<br />\nSerpent<br />\nTwofish <br />\nAES-Twofish<br />\nSerpent-AES<br />\nTwofish-Serpent<br />\nAES-Twofish-Serpent<br />\nSerpent-Twofish-AES</p>\n<p>　　显然，&#8221;三重加密&#8221;的强度最高，但是性能也最差。反之亦然。面对这么多选择，你需要考虑的就是：<b>如何平</b><b>衡&#8221;安全性&#8221;和&#8221;性能&#8221;。</b><br />\n　　&#8221;安全性&#8221;方面，刚刚已经介绍过了。至于&#8221;性能&#8221;，TrueCrypt 提供了一个 Benchmark 界面（在 TrueCrypt 主菜单点 &#8220;Tools&#8221; 然后再点 &#8220;Benchmark&#8221; 菜单项）。你可以在这个界面上测试不同组合的加密算法，其加密/解密的速度。请注意：在不同电脑测试，得到的排序结果是不同的。比方说有的 CPU 内置了 AES 指令，那么 AES 的速度就非常有优势（提升4至8倍）。（想知道自己的电脑 CPU 是否支持 AES 指令，先打开 TrueCrypt 主界面，在主菜单点&#8221;Setting&#8221;，再点&#8221;Performance&#8221;就能看到）</p>\n<p>　　下面举几个例子，说说如何平衡&#8221;安全性&#8221;和&#8221;性能&#8221;。（举例中提到的&#8221;加密盘&#8221;，泛指&#8221;物理加密盘&#8221;和&#8221;虚拟加密盘&#8221;）</p>\n<p>　　举例1<br />\n　　如果你要制作的加密盘是用来备份个人的隐私或敏感文件，并且这个加密盘平时不使用，仅仅用作&#8221;灾难恢复&#8221;。那你完全可以选择强度最高的&#8221;三重加密&#8221;。</p>\n<p>　　举例2<br />\n　　如果你的加密盘是用来存放一些日常使用的文档类资料（比如电子书）。在这种情况下，磁盘&#8221;读操作&#8221;的频度远远高于&#8221;写操作&#8221;的频度。那么你就需要挑选&#8221;解密速度&#8221;快的组合。（磁盘读操作对应&#8221;解密&#8221;，磁盘写操作对应&#8221;加密&#8221;）</p>\n<p>　　举例3<br />\n　　如果你使用 TrueCrypt 来加密系统分区，并且你的虚拟内存文件也在该分区。那么就要兼顾&#8221;读写两方面&#8221;的性能。这时候俺建议采用 AES 单重加密。如果你的 CPU 内置 AES 指令，更加要选 AES 相关的组合。<br />\n有的同学会担心，单重加密是不是不够强？俺的观点是：尽量不要把敏感文件放到系统分区。这种情况下，系统分区没啥要害，单重加密通常是够用的。</p>\n<h2>★如何选择&#8221;散列算法&#8221;？</h2>\n<p>\n　　&#8221;散列算法&#8221;又称为&#8221;哈希算法&#8221;（洋文叫 Hash）。不了解的同学，可以先看俺写的《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/02/file-integrity-check.html\">扫盲文件完整性校验——关于散列值和数字签名</a>》。这篇博文中大致解释了散列算法的概念。<br />\n　　用 TrueCrypt 创建加密盘，除了要选择加密算法的组合，还需要选择散列算法。TrueCrypt 需要使用散列算法来进行&#8221;伪随机数生成&#8221;，然后再利用&#8221;伪随机数&#8221;来产生加密卷的主密钥。</p>\n<p>　　TrueCrypt 支持如下三种散列算法：<br />\nRIPEMD-160<br />\n顾名思义，算列值是160比特（20字节）<br />\nSHA-512<br />\n顾名思义，算列值是512比特（64字节）<br />\nWhirlpool<br />\n算列值是512比特（64字节）</p>\n<p>　　通常而言，散列值的长度越大，&#8221;人为碰撞&#8221;和&#8221;随机碰撞&#8221;的概率就越小。所以俺一般选后两种。另外提醒一下：如果使用 TrueCrypt 加密系统分区，只能选 RIPEMD-160 这个散列算法。</p>\n<h2>★磁盘加密的操作模式</h2>\n<p>\n　　（本小节涉及较多密码学的知识，不太懂技术的网友请自行跳过，以免浪费时间和心情）</p>\n<p>　　上周那篇《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/07/online-backup-virtual-encrypted-disk.html\">文件备份技巧：组合&#8221;虚拟加密盘&#8221;和&#8221;网盘&#8221;</a>》提到了：利用某些网盘客户端提供的&#8221;字节级差异同步&#8221;来优化加密盘的上传速度。<br />\n　　之后某网友在博客留言中提出质疑。他/她认为：加密盘中即使只修改了某个小文件，因为加密算法的特点，会导致加密卷文件中有大量的数据被修改。<br />\n　　这位网友思考问题比较深入，但对&#8221;块加密算法&#8221;只知其一，不知其二。下面俺稍微解释一下 TrueCrypt 采用的 XTS 操作模式。</p>\n<p>　　&#8221;块加密算法&#8221;因为每次加密的明文是固定大小的（也就是&#8221;块尺寸&#8221;），所以在实际使用场合中，需要结合具体的操作模式。所谓的操作模式，就是把明文通过某种方式分割成若干块，然后采用某种机制分别加密每一块。<br />\n　　最常听说的操作模式有 ECB、CBC、PCBC、CFB、等等（维基百科的&#8221;<a rel=\"nofollow\" target=\"_blank\" href=\"https://zh.wikipedia.org/wiki/%E5%9D%97%E5%AF%86%E7%A0%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F\">这里</a>&#8220;有这些操作模式的原理介绍）。</p>\n<p>　　ECB 最简单，就是用密钥分别对 N 块明文进行加密，得到 N 块密文。此模式的最大缺陷在于：如果两块明文的内容完全一样，得到的那两块密文也会完全一样。所以  ECB 模式会遭遇&#8221;差分攻击&#8221;（通过差异化分析进行破解的尝试）。</p>\n<p>　　后来 IBM 公司在70年代发明了 CBC——这个模式可以避免 ECB 的缺点。CBC 的原理也比较简单：先加密第一块明文，得到第一块的密文；然后在加密第二块明文的时候，把第一块密文作为输入参与运算；然后把第二块的密文作为第三块加密的输入；以此类推&#8230;&#8230;<br />\n　　CBC 的好处在于，即使相邻两块明文的内容完全一样，加密得到的密文差异也极大。所以 CBC 可以对抗&#8221;差分攻击&#8221;。但是 CBC 没法用于磁盘加密。因为 CBC 模式在加密/解密某个数据块的时候，要<b>连环依赖</b>于其它数据块的加密/解密。如果磁盘加密工具使用 CBC 模式，性能会非常非常差（原因很显然，自己想）。</p>\n<p>　　为了解决磁盘加密的需求，前几年又发明了新的模式——XEX 和 XTS（这两者差不多，XTS 是 XEX 的改良版）。使用 XTS 进行加密/解密，不同的数据块是完全独立的（解决了磁盘读写的性能问题）；另外，这玩意儿本身没有明显弱点。所以，当今大部分磁盘加密工具（包括 TrueCrypt）都采用 XTS 模式。对 XTS 有兴趣的同学，可以到 <a rel=\"nofollow\" target=\"_blank\" href=\"http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?reload=true&#038;punumber=4493431\">IEEE 官网</a> 看相关的论文，也可以看 TrueCrypt 手册的&#8221;Description of XTS mode&#8221;章节。俺这里就不细说了。</p>\n<h2>★物理加密盘 VS 虚拟加密盘</h2>\n<p>\n　　在《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/07/online-backup-virtual-encrypted-disk.html\">文件备份技巧：组合&#8221;虚拟加密盘&#8221;和&#8221;网盘&#8221;</a>》中已经介绍过这两者常见的优缺点对比。今天除了说一下常见的优缺点对比，再稍微说一下不太常见的优缺点对比。</p>\n<h3>◇&#8221;虚拟加密盘&#8221;的优点（同时也是&#8221;物理加密盘&#8221;的缺点）</h3>\n<p>\n　　<b>优点1</b><br />\n　　首要的优点就是便于备份。因为&#8221;虚拟加密盘&#8221;说白了就是一个大文件，你只要把这个大文件 copy 到其它地方，就相当于完成了虚拟盘的备份。<br />\n　　而&#8221;物理加密盘&#8221;要备份，就相对麻烦一些。你需要使用专门的磁盘备份工具（比如 Ghost）。</p>\n<p>　　<b>优点2</b><br />\n　　虚拟加密盘可以嵌套任意多层（在一个虚拟盘内部再创建另一个虚拟盘）。<br />\n　　而物理加密盘不支持多重嵌套。（&#8221;外层卷&#8221;和&#8221;隐藏卷&#8221;不算嵌套。下一篇会单独介绍&#8221;隐藏卷&#8221;的经验）</p>\n<p>　　嵌套多层的好处在于，大大增加攻击者的破解难度。而且在一开始，攻击者根本无法知道你设置了多少层嵌套。（这个优点不明显。大部分网友应该用不到。但少数对安全性要求很高的网友，可能需要此优点）</p>\n<h3>◇&#8221;物理加密盘&#8221;的优点（同时也是&#8221;虚拟加密盘&#8221;的缺点）</h3>\n<p>\n　　<b>优点1</b><br />\n　　因为你没法把整个操作系统的系统分区放到一个虚拟加密盘中。所以，对系统分区只能采用&#8221;物理加密盘&#8221;的方式，无法采用&#8221;虚拟加密盘&#8221;的方式。<br />\n　　支持加密系统分区，这是&#8221;物理加密盘&#8221;主要的优点之一。当你把系统分区也加密了，就可以把信息泄漏的程度降到最低。</p>\n<p>　　<b>优点2</b><br />\n　　其实&#8221;物理加密盘&#8221;还有一个额外的好处，但大多数人碰不到这种情形。<br />\n　　当你因为干了某些事情而被警察盯上，警察可能会收缴你的电脑并拿回去做&#8221;取证分析&#8221;（如今公安部的省市级机构，都有&#8221;信息取证&#8221;的技术人员）。假如你用的是&#8221;虚拟加密盘&#8221;，那么你的电脑中就会有一些大文件（加密盘的卷文件）。如果当警察盘问你，这些个大文件是干嘛用滴？你很难解释，也很难抵赖。反之，如果你用的是&#8221;物理加密盘&#8221;，当对应的分区没有被挂载时，分区中的数据是杂乱无章的，就像是随机数据。那么你就可以辩解说，这个分区是刚分好的，尚未格式化。（这种辩解可以骗过外行，但骗不过内行）</p>\n<h3>◇怎样结合两者的优点？</h3>\n<p>\n　　这其实很容易想到的——就是把虚拟加密盘放到物理加密盘内部。当然，如果放到物理加密盘的隐藏卷部分，效果就更好了。（因为篇幅的关系，&#8221;隐藏卷&#8221;的经验放到下一篇，这里就不展开讨论了）</p>\n<p>　　把虚拟加密盘放到物理加密盘内部，你的操作系统中就不会有可疑的大文件，而且不影响虚拟加密盘的备份。真可谓一举多得，当然也有缺点——主要的缺点就是性能会下降。好在如今的电脑，CPU 已经很强劲了，动不动就是双核四线程。所以这点性能下降还是可以承受的。</p>\n<h2>★全盘加密 VS 逐个分区加密</h2>\n<p>\n　　使用物理加密盘可以有两种搞法：其一，全盘加密；其二，逐个分区加密。<br />\n　　对这两种方案，俺个人建议采用后者——逐个分区加密。把整个硬盘做一次性的全盘加密，虽然操作起来稍微简单一些，但是存在如下一些隐患。</p>\n<h3>◇隐患1——强度不够</h3>\n<p>\n　　大多数电脑都是单硬盘，也就是说系统分区也在该硬盘上。所以，对单硬盘的&#8221;全盘加密&#8221;也就是&#8221;加密系统分区&#8221;。而   TrueCrypt 在加密系统分区的时候，仅支持口令认证，不支持 KeyFiles 认证。这就导致加密强度大打折扣——KeyFiles 难以用暴力穷举，而口令更容易被暴力穷举。</p>\n<h3>◇隐患2——灵活性不够</h3>\n<p>\n　　如今的硬盘都很大，里面通常会有不止一个分区。不同分区存放的数据往往也不同。有的分区存放的数据重要，有的不重要。<br />\n　　如果你对整个硬盘进行一次性加密，就面临一个两难——如何选择加密算法？加密算法太强，性能会很差；加密算法不够强，安全性又不够。<br />\n　　而如果采用不同分区逐个加密的方案，就可以避免上述难点。你可以对特别敏感的分区采用更强的加密算法（但也更慢），对不太重要的分区采用弱一些（但也快一些）的加密算法。</p>\n<h3>◇隐患3——兼容性不够</h3>\n<p>\n　　假如你的硬盘安装了多个不同的操作系统（多引导）。这种情况下使用全盘加密可能会出现一些冲突，导致某些系统无法启动（Linux 和 Windows 混装的环境尤其明显）。</p>\n<p>\n本想一篇博文写完。写到这里发现内容已经很长了。今天先发出来，剩余部分再发1到2篇。大伙儿请见谅。<br />\n控制博文长度，主要是照顾某些&#8221;轻度阅读障碍&#8221;的网友。太长的博文他们无法从头到尾看完 :(</p>\n<p><b>俺博客上，和本文相关的帖子（需翻墙）</b>：<br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/recommend-truecrypt.html\">TrueCrypt——文件加密的法宝</a><br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2011/05/file-encryption-overview.html\">文件加密的扫盲介绍</a><br />\n<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2013/02/file-integrity-check.html\">扫盲文件完整性校验——关于散列值和数字签名</a><img src=\"http://feeds.feedburner.com/~r/programthink/~4/Qpb27GIHI_I\" height=\"1\" width=\"1\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<p><iframe src=\"https://docs.google.com/spreadsheet/embeddedform?formkey=dGRpN3FrVThuMFFsZHBZcmNGLW94dEE6MQ\" width=\"450\" height=\"309\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading&#8230;</iframe></p>\n<form method=\"POST\" action=\"http://chinadigitaltimes.us4.list-manage.com/subscribe/post?u=17daa75df533f6c6ff72e51ab&#038;id=b4fd4ae247\">\n<a href=\"http://eepurl.com/mstlf\">墙外新闻实时更新 欢迎订阅数字时代</a><br />\n <br /><input type=\"email\" value=\"\" name=\"EMAIL\" id=\"mce-EMAIL_in_post\" size=\"25\" style=\"display:block;\" placeholder=\"请输入您的邮件地址\" required><br />\n\t<input type=\"submit\" value=\"点击订阅\" name=\"subscribe\" style=\"height: 20px;\" id=\"in_post_subscribe\"><br />\n</form>\n","author":1004,"categories":[18270,18269,9203],"tags":[9400]}