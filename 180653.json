{"id":180653,"link":"https://chinadigitaltimes.net/chinese/2011/09/翻墙-16条技巧让你更高效使用ssh/","date":"2011-09-21T19:30:38Z","modified":"2011-09-21T19:30:38Z","title":"翻墙 | 16条技巧让你更高效使用SSH","content":"<p><p>来源：<a rel=\"nofollow\" target=\"_blank\" href=\"http://item.feedsky.com/~feedsky/heikezhi/~8608072/550574872/6713895/1/item.html\">http://item.feedsky.com/~feedsky/heikezhi/~8608072/550574872/6713895/1/item.html</a>  </p>\n<p>来自: <a rel=\"nofollow\" target=\"_blank\" href=\"http://www.feedzshare.com/b/7997956/2\">黑客志 – FeedzShare</a>   <br />发布时间:2011年08月27日,  已有 11 人推荐 </p>\n<hr>\n<p>SSH有很多非常酷的特性，如何它是你每天的工作伴侣，那么我想你有必要了解以下16条高效使用SSH的秘籍，它们帮你节省的时间肯定会远远大于你用来配置它们的时间。</p>\n<p><strong>1. 多条连接共享</strong></p>\n<p>如果你需要在多个窗口中打开到同一个服务器的连接，而不想每次都输入用户名，密码，或是等待连接建立，那么你可以配置SSH的连接共享选项，在本地打开你的SSH配置文件，通常它们位于~/.ssh/config，然后添加下面2行：</p>\n<p>ControlMaster auto   <br />ControlPath /tmp/ssh_mux_%h_%p_%r</p>\n<p>现在试试断开你与服务器的连接，并建立一条新连接，然后打开一个新窗口，再创建一条连接，你会发现，第二条连接几乎是在瞬间就建立好了。</p>\n<p>Windows用户</p>\n<p>如果你是Windows用户，很不幸，最流行的开源SSH客户端Putty并不支持这个特性，但是Windows上也有OpenSSH的实现，比如这个<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.itefix.no/i2/copssh\">Copssh</a>，如果你觉得下面的一些技巧对你很有帮助，或许你应该试试Copssh。</p>\n<p>文件传输</p>\n<p>连接共享不止可以帮助你共享多个SSH连接，如果你需要通过SFTP与服务器传输文件，你会发现，它们使用的依然是同一条连接，如果你使用的 Bash，你会发现，你甚至SSH甚至支持Tab对服务器端文件进行自动补全，共享连接选项对于那些需要借助SSH的工具，比如rsync，git等等也 同样有效。</p>\n<p><strong>2. 长连接</strong></p>\n<p>如果你发现自己每条需要连接同一个服务器无数次，那么长连接选项就是为你准备的：</p>\n<p>ControlPersist 4h</p>\n<p>现在你每次通过SSH与服务器建立连接之后，这条连接将被保持4个小时，即使在你退出服务器之后，这条连接依然可以重用，因此，在你下一次（4小时 之内）登录服务器时，你会发现连接以闪电般的速度建立完成，这个选项对于通过scp拷贝多个文件提速尤其明显，因为你不在需要为每个文件做单独的认证了。</p>\n<p><strong>3. 别再输入密码</strong></p>\n<p>如果你还在通过密码方式登录SSH，那么你或许应该试试SSH Keys，首先使用OpenSSH为自己声称一对密钥：</p>\n<p>$ ssh-keygen</p>\n<p>跟随指示，完成之后，你应该可以在你的.ssh目录下看到两个文件，id_rsa就是你的私钥，而id_ras.pub则是你的公钥，现在你需要将你的公钥拷贝到服务器上，如果你的系统有ssh-copy-id命令，拷贝会很简单：</p>\n<p>$ ssh-copy-id <a rel=\"nofollow\" target=\"_blank\" href=\"mailto:smylers@compo.example.org\">smylers@compo.example.org</a></p>\n<p>否则，你需要手动将你的私钥拷贝的服务器上的~/.ssh/authorized_keys文件中：</p>\n<p>$ < ~/.ssh/id_rsa.pub ssh <a rel=\"nofollow\" target=\"_blank\" href=\"http://clegg.example.org\">clegg.example.org</a> ‘mkdir -p .ssh; cat >> .ssh/authorized_keys; chmod go-w .ssh .ssh/authorized_keys’</p>\n<p>现在试试重新连接到SSH服务器，或是拷贝文件，是不是已经不需要再输入密码了？</p>\n<p>为Putty配置SSH Key</p>\n<p>Putty也可以使用SSH Key，<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\">从Putty网站下载PuttyGen和Pageant</a>，然后使用PuttyGen生成你的密钥，将公钥拷贝到服务器的’.ssh/authorized_keys’目录，然后运行Pageant，导入你的私钥，让它在后台运行，险隘你就可以使用Putty通过公钥直接登录服务器了，你可以在<a rel=\"nofollow\" target=\"_blank\" href=\"http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter8.html\">Putty手册的第8，9章</a>了解关于这一特性的详细介绍。</p>\n<p><strong>4. 连接中转</strong></p>\n<p>有时候你可能需要从一个服务器连接另外一个服务器，比如在两个服务器之间直接传输数据，而不用通过本地电脑中转：</p>\n<p>www1 $ scp -pr templates www2:$PWD</p>\n<p>（顺便说一下，当你需要在两台服务器间拷贝文件时，$PWD变量时非常有用的），因为即使你已经在两台服务器上添加了你本地电脑的公钥，scp默认 仍然会提示你输入密码：这是因为你用来作为跳板的那台服务器上并没有你的私钥，所以，第二胎服务器会拒绝你的公钥，但是一定不要通过将你的私钥拷贝到中转 服务器上来解决这个问题，你可以使用agent forwarding来解决这个问题，只要在你的.ssh/config文件中加入下面这行代码就可以了：</p>\n<p>ForwardAgent yes</p>\n<p>或者是在Putty中勾上“Allow agent forwarding”选项，现在你的本地SSH就变成了第一台服务器的SSH代理，从第一台服务器在连接其它服务器就变和和在你本地一样简单，注意，如果要开启这个选项，前提是这个中间服务器值得你信任。</p>\n<p><strong>5. 省略主机名</strong></p>\n<p>输入服务器的完整主机名来建立一个新的SSH连接实在是太乏味无聊了，尤其是当你有一组拥有相同域名但是子域名不同的服务器需要管理时，比如下面这样：</p>\n<p>* <a rel=\"nofollow\" target=\"_blank\" href=\"http://www1.example.com\">www1.example.com</a>    <br />* <a rel=\"nofollow\" target=\"_blank\" href=\"http://www2.example.com\">www2.example.com</a>    <br />* <a rel=\"nofollow\" target=\"_blank\" href=\"http://mail.example.com\">mail.example.com</a>    <br />* <a rel=\"nofollow\" target=\"_blank\" href=\"http://intranet.internal.example.com\">intranet.internal.example.com</a>    <br />* <a rel=\"nofollow\" target=\"_blank\" href=\"http://backup.internal.example.com\">backup.internal.example.com</a>    <br />* <a rel=\"nofollow\" target=\"_blank\" href=\"http://dev.internal.example.com\">dev.internal.example.com</a></p>\n<p>或许你的网络已经配置了可以直接使用短域名，比如intranet，但是如果你的网络不支持，实际上你可以自己搞定这个问题，而不用求助网络管理员。</p>\n<p>解决办法根据你用的操作系统而略有差异，下面是我的Ubuntu系统的配置：</p>\n<p>prepend domain-search “<a rel=\"nofollow\" target=\"_blank\" href=\"http://internal.example.com\">internal.example.com</a>”, “<a rel=\"nofollow\" target=\"_blank\" href=\"http://example.com\">example.com</a>”;</p>\n<p>然后你需要重启网络:$ sudo restart network-manager</p>\n<p>不同的系统，这两条命令可能会略有差异。</p>\n<p><strong>5. 主机别名</strong></p>\n<p>你也可以在你的SSH配置中直接定义主机别名，就像下面这样：</p>\n<p>Host dev   <br />    HostName <a rel=\"nofollow\" target=\"_blank\" href=\"http://dev.internal.example.com\">dev.internal.example.com</a></p>\n<p>你还可以使用通配符来进行分组：</p>\n<p>Host dev intranet backup   <br />    HostName %<a rel=\"nofollow\" target=\"_blank\" href=\"http://h.internal.example.com\">h.internal.example.com</a></p>\n<p>Host www* mail   <br />    HostName %<a rel=\"nofollow\" target=\"_blank\" href=\"http://h.example.com\">h.example.com</a></p>\n<p>在Putty中你可以为每个主机名保存单独的session，然后双击建立连接（但是它可能没办法支持通配符）。</p>\n<p><strong>7. 省去用户名</strong></p>\n<p>如果你在远程服务器上的用户名和你本地的用户名不同，你同样可以在SSH配置中进行设置：</p>\n<p>Host www* mail   <br />    HostName %<a rel=\"nofollow\" target=\"_blank\" href=\"http://h.example.com\">h.example.com</a>    <br />    User simon</p>\n<p>现在就算我的本地用户名是 smylers，我仍然可以这样连接我的服务器：</p>\n<p>$ ssh www2</p>\n<p>SSH会使用simon账户连接你的服务器，同样，Putty可以保存这个信息在你的session中。</p>\n<p><strong>8. 在服务器间跳转</strong></p>\n<p><strong></strong>有些时候，你可能没法直接连接到某台服务器，而需要使用一台中间服务器进行中转，这个过程也可以自动化。首先确保你已经为服务器配置了公钥访问，并开启了agent forwarding，现在你就可以通过2条命令来连接目标服务器，不会有任何提示输入：</p>\n<p>$ ssh gateway   <br />gateway $ ssh db</p>\n<p>然后在你的本地SSH配置中，添加下面这条配置：</p>\n<p>Host db   <br />    HostName <a rel=\"nofollow\" target=\"_blank\" href=\"http://db.internal.example.com\">db.internal.example.com</a>    <br />    ProxyCommand ssh gateway netcat -q 600 %h %p</p>\n<p>现在你就可以通过一条命令来直接连接目标服务器了:</p>\n<p>$ ssh db</p>\n<p>这里你可能会需要等待长一点的时间，因为SSH需要进行两次认证，，注意netcat也有可能被写成nc或者ncat或者前面还需要加上g，你需要检查你的中间服务器来确定实际的参数。</p>\n<p><strong>9. 突破网络封锁</strong></p>\n<p>有些时候，你使用的网络可能只开放了80端口，或者它们封锁了SSH端口（默认的22端口），这种情况下，你可以通过配置SSH服务器在80或者443端口进行监听来突破封锁，只需要编辑你的服务器的/etc/ssh/sshd_config文件：</p>\n<p>Port 443</p>\n<p>然后重启SSH服务器：</p>\n<p>$ sudo reload ssh</p>\n<p>当然这样做的前提是你的服务器没有使用HTTS服务，但是实际上你只需要设置一台服务器使用https端口就够了，你但你可以访问这台服务器，你就 可以使用我们前面提到的技术利用它作为跳板来访问其它服务器，但是记住，你需要提前配置好这台服务器（现在怎么样？），这样万一当你身处一个只能访问 Web的网络环境时，就可以省掉打电话让其他人帮你配置中间服务器的麻烦了。</p>\n<p><strong>10. 穿越Web代理</strong></p>\n<p>有些时候，你所在的网络不止封锁SSH端口，它们有可能更进一步，只让你通过Web代理来访问网络，幸运的是我们有一个叫做<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.agroman.net/corkscrew/\">Corkscrew</a>的程序可以通过Web代理在发送SSH数据。Corkscrew的使用非常简单，一般我都是在需要时搜索，然后直接下载，跟随网站上的指示，然后就搞定了，一般你需要这样一条配置：</p>\n<p>ProxyCommand corkscrew <a rel=\"nofollow\" target=\"_blank\" href=\"http://proxy.example.org\">proxy.example.org</a> 8080 %h %p</p>\n<p><strong>11. 远程GUI</strong></p>\n<p>有时候通过本地的GUI程序来访问远程服务器的文件会非常有用，比如，编辑一副图片，或者查看一个PDF文件，或者只是简单的通过一个非命令行的编 辑器来修改代码，我发现GVim要比终端里的Vim更有用，因为我可以通过gvimopens打开一个新窗口来编辑文件，而用当前的SSH窗口继续执行其 它操作，不要要这样做，你需要先在你的SSH配置中开启一个叫做X forwarding的选项：</p>\n<p>ForwardX11 yes</p>\n<p>这个选项需要服务器配置才能起作用，服务器也需要开启X forwarding，你可以在服务器的/etc/ssh/sshd_config中添加下面这个命令：</p>\n<p>X11Forwarding yes</p>\n<p>同时你还需要确保安装了xauth，编辑器，图片查看器以及其它的你需要运行的图形化程序，这种方式只有在支持本地X服务器的操作提供才可以工 作，mac和Windows上都有免费的X Server，你可能需要花些时间配置它们，相比之下，切换到Linux相对会更容易一下。</p>\n<p><strong>12.本地操作远程文件</strong></p>\n<p><strong></strong>另一种让远程GUI程序显示在本地的替代方案就是让本地的GUI程序可以直接操作远程文件，你可以通过SSHFS来实现，只需要创建一个空目录，然后使用SSHFS将一个远程目录mount到这个目录就可以了：</p>\n<p>$ mkdir gallery_src   <br />$ sshfs dev:projects/gallery/src gallery_src    <br />$ cd gallery_src    <br />$ ls</p>\n<p>现在你就可以使用任何你喜欢的本地程序来便捷这个目录中的文件了，它们看起来是在你的本地，但其实时远程服务器上的文件，你可以使用fusermount命令来unmount这些文件，不要担心记不住，它们就在sshfs手册的顶上：</p>\n<p>$ cd ..   <br />$ fusermount -u gallery_src</p>\n<p>SSHFS可以在Linux和OSX上工作，Windows用户我目前还没找到什么好办法。</p>\n<p><strong>13. 通过Vim访问远程文件</strong></p>\n<p>Vim有一个内置的功能可以直接编辑远程文件，需要借助SCP URL：</p>\n<p>$ gvim scp://dev/projects/gallery/src/templates/<a rel=\"nofollow\" target=\"_blank\" href=\"http://search.html.tt\">search.html.tt</a></p>\n<p>这中方式明显不如SSHFS灵活，但是如果你只需要对远程服务器的1，2个文件进行编辑时，这条命令就要更灵活一些了，并且可以在Windows上你也可以这样做：</p>\n<p>:help netrw-problems</p>\n<p><strong>14. 使用本地App连接远程服务器</strong></p>\n<p>有时可能有些服务，比如数据库或是Web服务器，它们运行在远程服务器上，但是如果有用方式可以直接从本地程序连接它们，那会非常有用，要做到这一 点，你需要用到端口转发(port forwarding)，举个例子，如果你的服务器运行Postgres（并且只允许本地访问），那么你就可以在你的SSH配置中加入：</p>\n<p>Host db   <br />    LocalForward 5433 localhost:5432</p>\n<p>现在当你连接你的SSH服务器时，它会在你本地电脑打开一个5433端口（我随便挑的），并将所有发送到这个端口的数据转发到服务器的5432端口 （Postgres的默认端口），然后，只要你和服务器建立了连接，你就可以通过5433端口来访问服务器的Postgres了。</p>\n<p>$ ssh db</p>\n<p>现在打开另外一个窗口，你就可以通过下面这条命令在本地连接你的Postgres数据库了：</p>\n<p>$ psql -h localhost -p 5443 orders</p>\n<p>如果你想要使用服务器不支持的图形化Postgres客户端时，这条命令会显得尤其有用：</p>\n<p>$ pgadmin3 &#038;</p>\n<p>或者你有一个后台的Web服务器，你不希望直接通过Internet访问它，你也可以通过端口转发来访问它：</p>\n<p>Host api   <br />    LocalForward 8080 localhost:80</p>\n<p>现在连接到服务器：</p>\n<p>$ ssh api</p>\n<p>然后将浏览器指向你选择的端口号：</p>\n<p>$ firefox <a rel=\"nofollow\" target=\"_blank\" href=\"http://localhost:8080/\">http://localhost:8080/</a></p>\n<p><strong>15. 减少延迟</strong></p>\n<p>如果每次连接服务器都意味着你需要等待几十秒而无所事事，那么你或许应该试试在你的SSH配置中加入下面这条：</p>\n<p>GSSAPIAuthentication no</p>\n<p>如果这条命令有效的话，你应该通知你的系统管理员让他在服务器上禁用这个选项，这样其他人就不用再分别添加这条配置到它们的本地配置了。</p>\n<p><strong>16. 加速连接</strong></p>\n<p>如果你确保你和某个服务器之间的连接是安全的（比如通过公司内网连接），那么你就可以通过选择arcfourencryption算法来让数据传输更快一些：</p>\n<p>Host dev   <br />    Ciphers arcfour</p>\n<p>注意这个加速是以牺牲数据的“加密”性为代价的，所以如果你连接的是位于网上的服务器，千万不要打开这个选项，并且确保你是通过VPN建立的连接。</p>\n<p><strong>开始行动吧！</strong></p>\n<p>以上就是我收集的高效使用SSH的技巧合集了，如果你还有更多技巧想要分享，记得通过<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:Smylers@cpan.org\">Smylers@cpan.org</a>或是通过<a rel=\"nofollow\" target=\"_blank\" href=\"http://twitter.com/Smylers2\">@Smylers2</a>来和我联系。</p>\n<p>现在就赶紧行动试试通过这些技巧来让你的SSH更有效率吧！</p>\n<p>———–   <br />本文来自：<a rel=\"nofollow\" target=\"_blank\" href=\"http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html\">SSH Can Do That? Productivity Tips for Working with Remote Servers</a>，作者：<a rel=\"nofollow\" target=\"_blank\" href=\"http://blogs.perl.org/users/smylers/\">Smylers</a>，翻译l整理：<a rel=\"nofollow\" target=\"_blank\" href=\"http://twitter.com/yuanyiz\">@yuanyiz</a></p>\n<p>想和我们一道传播黑客精神？<a rel=\"nofollow\" target=\"_blank\" href=\"http://heikezhi.com/join\">快来加入吧！</a></p>\n<p>  <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/gocomments/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/godelicious/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/gofacebook/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/gotwitter/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/gostumble/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/godigg/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/xijie.wordpress.com/5098/\" /></a> <a rel=\"nofollow\" target=\"_blank\" href=\"http://feeds.wordpress.com/1.0/goreddit/xijie.wordpress.com/5098/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/xijie.wordpress.com/5098/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=xijie.wordpress.com&#038;blog=10068099&#038;post=5098&#038;subd=xijie&#038;ref=&#038;feed=1\" width=\"1\" /></p>\n<p><img src=\"http://feeds.wordpress.com/1.0/comments/xijie.wordpress.com/5098/\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=738338\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"738338\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":983,"categories":[15300],"tags":[8510,8795]}