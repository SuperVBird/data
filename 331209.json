{"id":331209,"link":"https://chinadigitaltimes.net/chinese/2014/01/翻墙-扫盲-dns-原理-兼谈域名劫持和域名欺骗域/","date":"2014-01-24T18:01:12Z","modified":"2014-01-27T17:05:20Z","title":"翻墙 | 扫盲 DNS 原理 兼谈“域名劫持”和“域名欺骗/域名污染”","content":"<table cellpadding=\"0\" cellspacing=\"0\">\n<tbody>\n<tr>\n<td>\n<div align=\"center\">\n<table cellpadding=\"0\" cellspacing=\"0\">\n<tbody>\n<tr>\n<td>\n<div>Via <a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/\">编程随想的博客</a>              </div>\n<div dir=\"ltr\">扫盲 DNS 原理，兼谈&#8221;域名劫持&#8221;和&#8221;域名欺骗/域名污染&#8221;</p>\n<p>前天下午（1月21日），咱们天朝发生了全国性的互联网故障，导致大量国内网站无法访问。这次故障说白了就是一次全国性大范围的域名污染。所以俺借此机会，给大伙儿扫盲一下 DNS 的常识。既然是扫盲 DNS，也顺带说说&#8221;域名劫持&#8221;和&#8221;域名污染&#8221;这两个很容易混淆的概念。提醒一下：这两者的其中之一是 GFW 的大杀器，爱翻墙的同学有必要了解。</p>\n<h2>★DNS 是啥？</h2>\n<p>DNS 是洋文&#8221;Domain Name System&#8221;的缩写，直译过来就是&#8221;域名系统&#8221;。</p>\n<h2>★DNS 有啥用？</h2>\n<p>咱们每天打交道的这个互联网，其底层的基石是&#8221;IP&#8221;。IP 是&#8221;Internet Protocol&#8221;的缩写，中文就&#8221;互联网协议&#8221;（光看名字就知道这玩意儿很重要）。咱们日常用的那些互联网软件（浏览器、聊天工具、下载工具、等等）在工作时，必须依靠【<b>IP地址</b>】才能进行网络数据传输。</p>\n<p>&#8220;IP地址&#8221;是设计给软件用滴——虽然软件很容易处理，但对于人类而言，却很难记忆。于是，后来又发明了 DNS。有了 DNS，人类就不需要记住长长的一串 IP地址，而只需记住&#8221;域名&#8221;（域名通常更短，也更具有可读性）。</p>\n<p>比如你上网的时候，只需在地址栏输入网站的&#8221;域名&#8221;，而不用输入网站的&#8221;IP地址&#8221;。然后电脑系统会利用 DNS 来把&#8221;域名&#8221;翻译成&#8221;IP地址&#8221;。这个翻译的过程术语叫&#8221;域名解析/DNS解析&#8221;。</p>\n<h2>★域名的结构是咋样滴？</h2>\n<p>域名是按照&#8221;树形结构&#8221;组织的。不懂得啥是&#8221;树形结构&#8221;的同学，可以对照一下电脑硬盘上的目录结构。域名的结构和目录结构很类似，目录结构是用&#8221;斜杠&#8221;作�   �隔符，而域名是用小数点作分隔符。两者的主要区别在于：目录结构名称的形式是从左到右（上级在左，下级在右），而域名是从右到左（上级在右，下级在左）。<br />　　<br />以俺博客的域名为例：<br /><u><br /></u><u>program-think.blogspot.com</u> 的上级域名是 <u>blogspot.com</u><br /><u>blogspot.com</u> 的上级域名是 <u>com</u><br />这里的 com 就被称为顶级域名（Top-Level Domain，简称 TLD），跟 com 类似的那些 net org gov 也是顶级域名。还有那些以国家/地区的代码命名的（比如 cn tw hk jp 等等）也是顶级域名。</p>\n<h2>★&#8221;域名解析&#8221;是咋实现滴？</h2>\n<p>　　如果你曾经配置过电脑的网卡，应该记得上面除了有IP地址、掩码等设置，还有一项设置是&#8221;DNS服务器/域名服务器&#8221;。这项设置就是用�   ��帮助你的电脑进行域名解析的。你可以把这个&#8221;DNS服务器&#8221;想象成114查号台。每当电脑需要翻译某个域名，就找这个域名服务器查询，然后域名服务器会告诉你的电脑，要查询的域名对应的IP地址是啥。</p>\n<p>下面简单说一下，你的电脑进行域名解析的过程。</p>\n<p>为了叙述方便，以俺博客为例。当你在浏览器的地址栏中输入 <u>http://program-think.blogspot.com/</u>，然后敲回车，这时候电脑软件会进行如下一系列事情。</p>\n<p>1. 首先根据输入的网址，提取出域名（在本例中，也就是 <u>program-think.blogspot.com</u>）</p>\n<p>2. 如果你在系统中配置了 Hosts 文件，那么电脑会先查询 Hosts 文件，看这个 <u>program-think.blogspot.com</u> 否已经在 Hosts 里面有了对应的记录。如果有，直接就可以拿到该记录中的 IP地址，过程就结束了。</p>\n<p>3. 如果 Hosts 里面没有这个别名，那么电脑会看你有没有设置域名服务器（DNS 服务器）。如果你系统没有设置过域名服务器，那电脑就没辙了，浏览器直接会报错，说网站找不到。过程就结束了。</p>\n<p>4. 如果你设置过&#8221;域名服务器&#8221;，那么电脑会向这个域名服务器发送一个域名查询（DNS query）的请求，然后等候域名服务器的回应。</p>\n<p>5. 如果域名服务器始终没有回应（比如域名服务器挂了，或域名服务器的IP填错了，或请求被 GFW 拦截了），那么电脑还是没辙（浏览器会报错）。</p>\n<p>6. 如果域名服务器回应了，那么你的电脑就可以根据域名服务器的应答信息，得到该域名的 IP地址。之后浏览器就会向这个 IP地址 对应的 Web 端口发送 HTTP 请求。</p>\n<p>通常情况下，电脑拿到的（DNS服务器）应答信息是正确的，也就是说，应答中的 IP地址 确实对应那个域名——这种情况下，你的网络软件就可以正常工作了。</p>\n<p>但是在天朝这个奇葩的国家，电脑拿到的 DNS 应答有可能是【<b>错的</b>】。为啥会这样捏，本文的后半部，俺会介绍一下&#8221;域名劫持&#8221;和&#8221;域名污染&#8221;。</p>\n<h2>★域名服务器如何知道这些信息？</h2>\n<p>（本小节的内容偏技术化，技术菜鸟请仔细理解）</p>\n<p>刚才介绍了&#8221;客户端域名解析&#8221;的过程。接下来说说域名服务器是如何得到这些信息的。</p>\n<h3>◇域名的缓存</h3>\n<p>大伙儿平时使用的域名服务器，技术术语叫&#8221;递归域名服务器&#8221;。&#8221;递归服务器&#8221;是面向普通网友的。刚才介绍&#8221;域名解析&#8221;的时候提到的服务器就是&#8221;递归服务器&#8221;。</p>\n<p>&#8220;递归服务器&#8221;的内部通常会有一个 DNS记录 的缓存——这个缓存是为了提高查   询效率的。当某台电脑向递归服务器发起域名查询时，递归服务器首先看自己的缓存中有没有该域名的记录，如果有，直接就回复该记录给查询的电脑。</p>\n<p>万一对方想要查询的域名没找到，咋办捏？这时候就要进行缓存的同步。</p>\n<h3>◇缓存的同步</h3>\n<p>下面就拿俺博客的域名为例，说说这种情况的处理流程。</p>\n<p>1. 对方查询 program-think.blogspot.com 这个域名，&#8221;递归服务器&#8221;发现自己的缓存中没有</p>\n<p>2. &#8220;递归服务器&#8221;会先去找&#8221;根域名服务器&#8221;帮忙，&#8221;根服务器&#8221;会告诉&#8221;递归服务器&#8221;说：这个域名属于 com 这个分支之下，你去找 com 这个域名的&#8221;权威服务器&#8221;，这个权威服务器的 IP地址 是 xxx。</p>\n<p>3. 然后&#8221;递归服务器&#8221;根据拿到的这个 xxx地址，又去找&#8221;com 域名的权威服务器&#8221;。&#8221;com 域名的权威服务器&#8221;告诉它：你应该去找&#8221;blo   gspot.com 域名的权威服务器&#8221;，这个权威服务器的 IP地址 是 yyy</p>\n<p>4. 然后&#8221;递归服务器&#8221;又屁颠屁颠地去找&#8221;blogspot.com 域名的权威服务器&#8221;。这时候&#8221;blogspot.com 域名的权威服务器&#8221;才会告诉它，program-think.blogspot.com 这个域名的 IP地址 到底是多少。</p>\n<p>大伙儿看到没有？整个过程如同&#8221;踢皮球&#8221;，效率是很低的。所以俺前面提到，&#8221;递归域名服务器&#8221;必须得有一个缓存，以此来优化效率（不用每次查询都来一次&#8221;踢皮球&#8221;）。</p>\n<h3>◇同步的周期</h3>\n<p>说完了&#8221;域名的同步&#8221;，顺便提一下&#8221;同步的周期&#8221;。</p>\n<p>因为互联网上的域名信息是有可能发生变化的。比如增加了某个新域名，注销了某个旧域名，或者某个域名对应的 IP地址 变了。所以，&#8221;递归服务器&#8221;上保留的缓存中，每一条域名记录都有一个生命周期（可能是几分钟，也可能是几小时）。如果某条记录的生命周期过了，就会被删除，然后重新同步。</p>\n<h2>★啥是&#8221;域名劫持&#8221;？</h2>\n<p>刚才说了，域名服务器上都会保存一大堆的域名记录（每条记录包含&#8221;域名&#8221;和&#8221;IP地址&#8221;）。当收到域名查询的时候，域名服务器会从这堆记录中找到对方想要的，然后回应给对方。</p>\n<p>如果域名服务器上的某条记录被【人为修改】了（改成错的），那么一旦要查询这条记录，得到的就是错误的结果。这种情况称之为&#8221;域名劫持&#8221;。</p>\n<h2>★谁有&#8221;域名劫持&#8221;的企图？</h2>\n<p>&#8220;域名劫持&#8221;通常是电信运营商（ISP）干的好事儿。很多宽带用户用的域名服务器就是 ISP 提供给你的。而天朝的 ISP 也是很奇葩的——经常耍流氓。</p>\n<p>举例：</p>\n<p>前几年曾经出现过：某个 ISP 跟百度勾结，把谷歌的流量重定向到百度。具体搞法是：该 ISP 篡改自己的域名服务器的记录，把里面跟 google.com 相关的域名记录的 IP地址 修改为百度服务器的 IP地址。如此一来，假设你用的是这个 ISP 的域名服务器，当你在浏览器输入 www.gooogle.com 的时候，你的电脑查询到的 IP地址 其实是百度的 IP地址，所以浏览器打开的是&#8221;百度&#8221;的主页。</p>\n<h2>★如何对付&#8221;域名劫持&#8221;？</h2>\n<p>刚才说了，&#8221;域名劫持&#8221;的根源在于：域名服务器上的记录被人给改了。要对付这种耍流氓，最直接的办法就是不要使用这种流氓 ISP 提供的域名服务器，改用国外那些比较靠谱的。目前口碑最好的，大概是 Google 提供的两个域名服务器，IP地址 分别是 8.8.8.8 和 8.8.4.4 ——这俩不光是地址好记，更重要的是，不会耍流氓。</p>\n<h2>★啥是&#8221;域名污染&#8221;？</h2>\n<p>先提醒一下：&#8221;域名污染&#8221;这   个词还有其它几个别名，分别是&#8221;域名欺骗&#8221;、&#8221;域名缓存投毒&#8221;（洋文叫：DNS cache poisoning）。今后看到这几个别名，要晓得是同一个意思。</p>\n<p>&#8220;域名污染&#8221;的原理，简单说来是这样滴：当你的电脑向域名服务器发送了&#8221;域名查询&#8221;的请求，然后域名服务器把回应发送给你的电脑，这之间是有一个时间差的。如果某个攻击者能够在域名服务器的&#8221;DNS应答&#8221;还没有到达你的电脑之前，先伪造一个错误的&#8221;DNS应答&#8221;发给你电脑。那么你的电脑收到的就是错误的信息，并得到一个错误的 IP地址。</p>\n<h2>★谁有&#8221;域名污染&#8221;的企图？</h2>\n<p>从技术上讲，只要攻击者能够位于&#8221;你&#8221;和&#8221;域名服务器&#8221;的传输线路中间，那么攻击者就有机会搞&#8221;域名污染&#8221;。能够做到这点的，可能是一个黑客/骇客，也可能是 ISP。不过这些都不是本节聊的重点。本节的重点是 GFW——它是最有资源搞域名污染的，同时也最有意愿搞域名污染的。在《<a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2009/05/how-to-break-through-gfw.html\">如何翻墙？</a>》这篇全面扫盲教程中，俺提到 GFW 最有名的三板斧，其中一板斧就是&#8221;域名污染&#8221;。</p>\n<p>举例：</p>\n<p>比如某个国外网站，长年累月地抹黑咱们伟大光荣正确的党国，搞得咱们的&#8221;伟光正&#8221;很没面子，很不爽。那么朝廷的&#8221;真理部&#8221;就会给 GFW 下达封杀令——要求 GFW 全面封锁某某网站。对于 GFW 而言，要全面封掉某个网站，最简单的一个办法就是直接污染该网站的域名。用了这招之后，那些不懂翻墙的网友只要是通过【域名的方式】访问该网站，他们的电脑进行 DNS查询 之后，多半会得到错误的结果（也就是说，查到的 IP地址 是假的）；既然拿到假的 IP地址，当然就无法打开这个网站的页面啦。</p>\n<h2>★GFW 的两种&#8221;域名污染&#8221;</h2>\n<p>刚才俺解释了&#8221;域名污染&#8221;的原理，那种形式不妨称为&#8221;直接污染&#8221;。由于 GFW 的特殊性，它不但可以做到&#8221;直接污染&#8221;，还可以做到&#8221;间接污染&#8221;。而普通的骇客顶多只能做到&#8221;直接污染&#8221;，难以做到&#8221;大范围的间接污染&#8221;。</p>\n<p>那么这两种污染有啥区别捏？且听俺细细道来。</p>\n<h3>◇GFW 部署在哪？</h3>\n<p>首先有必要先扫盲一下&#8221;GFW的部署位置&#8221;。咱们天朝的互联网只有少数几个国际出口（名气较大的是：北京出口、上海出口、广州出口）。如果你要访问天朝之外的网站，你的网络数据流就必定会经过其中的某个&#8221;国际出口&#8221;。而天朝的每一个国际出口都部署了 GFW 的设备。</p>\n<p>说到这里，顺便插一句：</p>\n<p>GFW 是洋文&#8221;Great FireWall&#8221;的缩写。很多同学包括很多懂技术的同学）都望文生义，想当然地以为 GFW 就是某种&#8221;防火墙&#8221;设备。其实不然。GFW 是基于 IDS（IDS是&#8221;入侵监测系统&#8221;的缩写）打造的。有空的话，俺再来聊聊 GFW 本身的技术细节。</p>\n<h3>◇GFW 的直接污染</h3>\n<p>因为 GFW 部署在天朝的国际出口。如果你用的是【<b>国外的</b>】域名服务器，你的&#8221;DNS请求&#8221;必定会经过国际出口；同样，域名服务器的&#8221;DNS应答&#8221;必定也会经过国际出口才能到你的电脑。这一来一回就给 GFW 提供了耍流氓的机会。</p>\n<p>这种污染就是俺所说的&#8221;直接污染&#8221;。</p>\n<h3>◇GFW 的间接污染</h3>\n<p>刚才介绍了&#8221;使用国外域名服务器会被直接污染&#8221;。那如果你用的是【<b>国内的</b>】域名服务器捏？就会被&#8221;间接污染&#8221;。过程如下：</p>\n<p>1. 比方说你用的是电信的 DNS服务器，然后你想要访问某个（被�   ��杀的）反共网站。因为这个反共网站在国外，所以反共网站对应的&#8221;权威域名服务器&#8221;肯定也是在国外。</p>\n<p>2. 当你向&#8221;电信的DNS服务器&#8221;查询反共网站的域名，这台&#8221;电信的DNS服务器&#8221;会去找这个反共网站的上一级域名对应的&#8221;权威域名服务器&#8221;去进行&#8221;域名查询&#8221;。</p>\n<p>3. 因为是从国外进行域名查询，相关的数据流必定要经过国际出口。一旦经过国际出口，就会被 GFW 污染。</p>\n<p>4. 如此一来，&#8221;电信的域名服务器&#8221;拿到的是已经被污染的域名记录（里面的IP是错的）。而且&#8221;电信的域名服务器&#8221;会把这条错误的记录保存在自己的域名缓存中。<br />5. 下次如果有另一个网友也找这台&#8221;电信的域名服务&#8221;查询这个反共网站，也会查到错误的结果。</p>\n<p>上述过程不断重复，最终会导致：全国所有的域名服务器，它们的缓存中只要是包含了那反共网站的记录，记录中的 IP地址 必定是错的（这个错误的 IP地址 也就是 GFW 伪造的那个）。所以说&#8221;间接污染&#8221;是很牛逼的，可以把错误的域名记录扩散到全国。</p>\n<p>刚才俺说了，&#8221;域名污染&#8221;也叫&#8221;域名缓存投毒&#8221;。&#8221;投毒&#8221;一词真的非常形象——就好象在某条河流的源头下毒，从而把整条河流的水都污染。在互联网时代搞&#8221;域名污染&#8221;是非常卑鄙下流的。因为 DNS 是互联网的基础设施，而&#8221;域名污染&#8221;直接破坏了互联网的基础设施。所以说，天朝是一个非常奇葩的国度；咱们面对的是一个做事情毫无底线的政府。</p>\n<h2>★咋对付&#8221;域名欺骗&#8221;？</h2>\n<p>这个话题有点大。因为有很多种招数可以对付&#8221;域名欺骗&#8221;。统统都写在这里，篇幅太长了。</p>\n<p>所以俺决定：抽空另写一篇教程，专门谈这个问题。敬请关注。</p>\n<p><b>本博客上，和本文相关的帖子（需翻墙）</b>：</p>\n<p><a rel=\"nofollow\" target=\"_blank\" href=\"http://program-think.blogspot.com/2009/05/how-to-break-through-gfw.html\">如何翻墙</a>（传说中的翻墙入门教程，不定期更新）</p>\n<div>\n<hr>\n<h4>版权声明</h4>\n<p>本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者&#8221;<b>编程随想</b>&#8220;和本文原始地址。  </p>\n<h4></h4>\n</div>\n<div></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<div>翻墙技术博客<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.chinagfw.org/2013/09/blog-post.html\">订阅地址及社交帐号</a></div>\n</p>\n<p><a href=\"https://s3.amazonaws.com/cdtimes/index.html?u=chinese\">中国数字时代亚马逊镜像</a>（墙内可直接点击）</p>\n","author":1005,"categories":[18270,18269,10466,15300],"tags":[7775,15568]}