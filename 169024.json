{"id":169024,"link":"https://chinadigitaltimes.net/chinese/2011/07/阮一峰-jquery设计思想/","date":"2011-07-27T10:00:26Z","modified":"2011-07-27T10:00:26Z","title":"阮一峰 | jQuery设计思想","content":"<p><p><a rel=\"nofollow\" href=\"http://jquery.com/\">jQuery</a>是目前使用最广泛的javascript函数库。</p>\n<p>据<a rel=\"nofollow\" href=\"http://trends.builtwith.com/javascript/\">统计</a>，全世界排名前100万的网站，有46%使用jQuery，远远超过其他库。微软公司甚至把jQuery作为他们的官方库。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072601.png\" /></p>\n<p>对于网页开发者来说，学会jQuery是必要的。因为它让你了解业界最通用的技术，为将来学习更高级的库打下基础，并且确实可以很轻松地做出许多复杂的效果。</p>\n<p>虽然jQuery上手简单，比其他库容易学会，但是要全面掌握，却不轻松。因为它涉及到网页开发的方方面面，提供的各种方法和内部变化有上千种之多。初学者常常感到，入门很方便，提高很困难。</p>\n<p>目前，互联网上最好的jQuery入门教材，是<a rel=\"nofollow\" href=\"http://www.rebeccamurphey.com/\">Rebecca Murphey</a>写的<a rel=\"nofollow\" href=\"http://jqfundamentals.com/book/index.html\">《jQuery基础》</a>（jQuery Fundamentals）。在Google里搜索&#8221;jQuery 培训&#8221;，此书排在第一位。jQuery官方团队已经<a rel=\"nofollow\" href=\"http://blog.rebeccamurphey.com/the-future-of-jquery-fundamentals-and-a-confe\">同意</a>，把此书作为官方教程的基础。</p>\n<p><img src=\"http://image.beekka.com/blog/201107/bg2011072602.png\" /></p>\n<p>这本书虽然是入门教材，但也足足有100多页。我对它做了一个详细的笔记，试图理清jQuery的设计思想，找出学习的脉络。我的目标是全面掌握jQuery，遇到问题的时候，心里有底，基本知道使用它的哪一个功能，然后可以迅速从<a rel=\"nofollow\" href=\"http://docs.jquery.com/Main_Page\">手册</a>中找到具体的写法。</p>\n<p>下面就是我的笔记，它应该是目前网上不多的jQuery中文教程之一。你只需要一点javascript语言的基本知识，就能看懂它，在最短的时间里，掌握jQuery的所有主要方面（除了<a rel=\"nofollow\" href=\"http://api.jquery.com/category/ajax/\">ajax</a>和<a rel=\"nofollow\" href=\"http://docs.jquery.com/Plugins/Authoring\">插件开发</a>）。</p>\n<p>===========================================</p>\n<p><strong>jQuery设计思想</strong></p>\n<p>原文网址：<a rel=\"nofollow\" href=\"http://jqfundamentals.com/book/\">http://jqfundamentals.com/book/</a></p>\n<p>阮一峰 翻译整理</p>\n<p>【目录】</p>\n<p> 一、选择网页元素</p>\n<p> 二、改变结果集</p>\n<p> 三、链式操作</p>\n<p> 四、元素的操作：取值和赋值</p>\n<p> 五、元素的操作：移动</p>\n<p> 六、元素的操作：复制、删除和创建</p>\n<p> 七、工具方法</p>\n<p> 八、事件操作</p>\n<p> 九、特殊效果</p>\n<p>【正文】</p>\n<p><strong>一、选择网页元素</strong></p>\n<p>jQuery的基本设计和主要用法，就是<strong>&#8220;选择某个网页元素，然后对其进行某种操作&#8221;</strong>。这是它区别于其他函数库的根本特点。</p>\n<p>使用jQuery的第一步，往往就是将一个选择表达式，放进构造函数jQuery()（简写为$），然后得到被选中的元素。</p>\n<p>选择表达式可以是<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2009/03/css_selectors.html\">CSS选择器</a>：</p>\n<blockquote>\n<p> $(document) //选择整个文档对象</p>\n<p> $(&#8216;#myId&#8217;) //选择ID为myId的网页元素</p>\n<p> $(&#8216;div.myClass&#8217;) // 选择class为myClass的div元素</p>\n<p> $(&#8216;input[name=first]&#8217;) // 选择name属性等于first的input元素</p>\n</blockquote>\n<p>也可以是jQuery<a rel=\"nofollow\" href=\"http://api.jquery.com/category/selectors/\">特有的表达式</a>：</p>\n<blockquote>\n<p> $(&#8216;a:first&#8217;) //选择网页中第一个a元素</p>\n<p> $(&#8216;tr:odd&#8217;) //选择表格的奇数行</p>\n<p> $(&#8216;#myForm :input&#8217;) // 选择表单中的input元素</p>\n<p> $(&#8216;div:visible&#8217;) //选择可见的div元素</p>\n<p> $(&#8216;div:gt(2)&#8217;) // 选择所有的div元素，除了前三个</p>\n<p> $(&#8216;div:animated&#8217;) // 选择当前处于动画状态的div元素</p>\n</blockquote>\n<p><strong>二、改变结果集</strong></p>\n<p>如果选中多个元素，jQuery提供<a rel=\"nofollow\" href=\"http://api.jquery.com/category/traversing/filtering/\">过滤器</a>，可以缩小结果集：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;).has(&#8216;p&#8217;); // 选择包含p元素的div元素</p>\n<p> $(&#8216;div&#8217;).not(&#8216;.myClass&#8217;); //选择class不等于myClass的div元素</p>\n<p> $(&#8216;div&#8217;).filter(&#8216;.myClass&#8217;); //选择class等于myClass的div元素</p>\n<p> $(&#8216;div&#8217;).first(); //选择第1个div元素</p>\n<p> $(&#8216;div&#8217;).eq(5); //选择第6个div元素</p>\n</blockquote>\n<p>有时候，我们需要从结果集出发，移动到附近的相关元素，jQuery也提供了在DOM树上的<a rel=\"nofollow\" href=\"http://api.jquery.com/category/traversing/tree-traversal/\">移动方法</a>：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;).next(&#8216;p&#8217;); //选择div元素后面的第一个p元素</p>\n<p> $(&#8216;div&#8217;).parent(); //选择div元素的父元素</p>\n<p> $(&#8216;div&#8217;).closest(&#8216;form&#8217;); //选择离div最近的那个form父元素</p>\n<p> $(&#8216;div&#8217;).children(); //选择div的所有子元素</p>\n<p> $(&#8216;div&#8217;).siblings(); //选择div的同级元素</p>\n</blockquote>\n<p><strong>三、链式操作</strong></p>\n<p>选中网页元素以后，就可以对它进行某种操作。</p>\n<p>jQuery允许将所有操作连接在一起，以链条的形式写出来，比如：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;).find(&#8216;h3&#8217;).eq(2).html(&#8216;Hello&#8217;);</p>\n</blockquote>\n<p>分解开来，就是下面这样：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;) //找到div元素</p>\n<p> .find(&#8216;h3&#8217;) //选择其中的h3元素</p>\n<p> .eq(2) //选择第3个h3元素</p>\n<p> .html(&#8216;Hello&#8217;); //将它的内容改为Hello</p>\n</blockquote>\n<p>这是jQuery最令人称道、最方便的特点。它的原理在于每一步的jQuery操作，返回的都是一个jQuery对象，所以不同操作可以连在一起。</p>\n<p>jQuery还提供了<a rel=\"nofollow\" href=\"http://api.jquery.com/end/\">.end()</a>方法，使得结果集可以后退一步：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;) </p>\n<p> .find(&#8216;h3&#8217;)</p>\n<p> .eq(2)</p>\n<p> .html(&#8216;Hello&#8217;)</p>\n<p> <strong>.end() //退回到选中所有的h3元素的那一步</strong></p>\n<p> .eq(0) //选中第一个h3元素</p>\n<p> .html(&#8216;World&#8217;); //将它的内容改为World</p>\n</blockquote>\n<p><strong>四、元素的操作：取值和赋值</strong></p>\n<p>操作网页元素，最常见的需求是取得它们的值，或者对它们进行赋值。</p>\n<p>jQuery使用同一个函数，来完成取值（getter）和赋值（setter）。到底是取值还是赋值，由函数的参数决定。</p>\n<blockquote>\n<p> $(&#8216;h1&#8217;).html(); //html()没有参数，表示取出h1的值</p>\n<p> $(&#8216;h1&#8217;).html(&#8216;Hello&#8217;); //html()有参数Hello，表示对h1进行赋值</p>\n</blockquote>\n<p>常见的取值和赋值函数如下：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/html/\">.html()</a> 取出或设置html内容</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/text/\">.text()</a> 取出或设置text内容</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/attr/\">.attr()</a> 取出或设置某个属性的值</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/width/\">.width()</a> 取出或设置某个元素的宽度</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/height/\">.height()</a> 取出或设置某个元素的高度</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/val/\">.val()</a> 取出某个表单元素的值</p>\n</blockquote>\n<p>需要注意的是，如果结果集包含多个元素，那么赋值的时候，将对其中所有的元素赋值；取值的时候，则是只取出第一个元素的值（<a rel=\"nofollow\" href=\"http://api.jquery.com/text/\">.text()</a>例外，它取出所有元素的text内容）。</p>\n<p><strong>五、元素的操作：移动</strong></p>\n<p>如果要移动选中的元素，有两种方法：一种是直接移动该元素，另一种是移动其他元素，使得目标元素达到我们想要的位置。</p>\n<p>假定我们选中了一个div元素，需要把它移动到p元素后面。</p>\n<p>第一种方法是使用<a rel=\"nofollow\" href=\"http://api.jquery.com/insertAfter/\">.insertAfter()</a>，把div元素移动p元素后面：</p>\n<blockquote>\n<p> $(&#8216;div&#8217;).insertAfter(&#8216;p&#8217;);</p>\n</blockquote>\n<p>第二种方法是使用<a rel=\"nofollow\" href=\"http://api.jquery.com/after/\">.after()</a>，把p元素加到div元素前面：</p>\n<blockquote>\n<p> $(&#8216;p&#8217;).after(&#8216;div&#8217;);</p>\n</blockquote>\n<p>表面上看，这两种方法的效果是一样的，唯一的不同似乎只是操作视角的不同。但是实际上，它们有一个重大差别，那就是返回的元素不一样。第一种方法返回div元素，第二种方法返回p元素。你可以根据需要，选择到底使用哪一种方法。</p>\n<p>使用这种模式的操作方法，一共有四对：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/insertAfter/\">.insertAfter()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/after/\">.after()</a>：在现存元素的外部，从后面插入元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/insertBefore/\">.insertBefore()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/before\">.before()</a>：在现存元素的外部，从前面插入元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/appendTo/\">.appendTo()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/append\">.append()</a>：在现存元素的内部，从后面插入元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/prependTo/\">.prependTo()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/prepend\">.prepend()</a>：在现存元素的内部，从前面插入元素</p>\n</blockquote>\n<p><strong>六、元素的操作：复制、删除和创建</strong></p>\n<p>复制元素使用<a rel=\"nofollow\" href=\"http://api.jquery.com/clone/\">.clone()</a>。</p>\n<p>删除元素使用<a rel=\"nofollow\" href=\"http://api.jquery.com/remove/\">.remove()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/detach/\">.detach()</a>。两者的区别在于，前者不保留被删除元素的事件，后者保留，有利于重新插入文档时使用。</p>\n<p>清空元素内容（但是不删除该元素）使用<a rel=\"nofollow\" href=\"http://api.jquery.com/empty/\">.empty()</a>。</p>\n<p>创建新元素的方法非常简单，只要把新元素直接传入jQuery的构造函数就行了：</p>\n<blockquote>\n<p> $(&#39;</p>\n<p>Hello</p>\n<p>&#39;);</p>\n<p> $(&#39;</p>\n<li class=\"new\">new list item</li>\n<p>&#39;);</p>\n<p> $(&#39;ul&#39;).append(&#39;</p>\n<li>list item</li>\n<p>&#39;);</p>\n</blockquote>\n<p><strong>七、工具方法</strong></p>\n<p>除了对选中的元素进行操作以外，jQuery还提供一些<a rel=\"nofollow\" href=\"http://api.jquery.com/category/utilities/\">工具方法</a>（utility），不必选中元素，就可以直接使用。</p>\n<p>如果你懂得Javascript语言的<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/06/designing_ideas_of_inheritance_mechanism_in_javascript.html\">继承原理</a>，那么就能理解工具方法的实质。它是定义在jQuery构造函数上的方法，即jQuery.method()，所以可以直接使用。而那些操作元素的方法，是定义在构造函数的prototype对象上的方法，即jQuery.prototype.method()，所以必须生成实例（即选中元素）后使用。如果不理解这种区别，问题也不大，只要把工具方法理解成，是像javascript原生函数那样，可以直接使用的方法就行了。</p>\n<p>常用的工具方法有以下几种：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.trim/\">$.trim()</a> 去除字符串两端的空格。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.each/\">$.each()</a> 遍历一个数组或对象。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.inArray/\">$.inArray()</a> 返回一个值在数组中的索引位置。如果该值不在数组中，则返回-1。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.grep/\">$.grep()</a> 返回数组中符合某种标准的元素。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.extend/\">$.extend()</a> 将多个对象，合并到第一个对象。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.makeArray/\">$.makeArray()</a> 将对象转化为数组。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.type/\">$.type()</a> 判断对象的类别（函数对象、日期对象、数组对象、正则对象等等）。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.isArray/\">$.isArray()</a> 判断某个参数是否为数组。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.isEmptyObject/\">$.isEmptyObject()</a> 判断某个对象是否为空（不含有任何属性）。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.isFunction/\">$.isFunction()</a> 判断某个参数是否为函数。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.isPlainObject/\">$.isPlainObject()</a> 判断某个参数是否为用&#8221;{}&#8221;或&#8221;new Object&#8221;建立的对象。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.support/\">$.support()</a> 判断浏览器是否支持某个特性。</p>\n</blockquote>\n<p><strong>八、事件操作</strong></p>\n<p>jQuery可以对网页元素绑定<a rel=\"nofollow\" href=\"http://api.jquery.com/category/events/\">事件</a>。根据不同的事件，运行相应的函数。</p>\n<blockquote>\n<p> $(&#8216;p&#8217;).click(function()</p>\n<p> alert(&#8216;Hello&#8217;);</p>\n<p> );</p>\n</blockquote>\n<p>目前，jQuery主要支持以下事件：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/blur/\">.blur()</a> 表单元素失去焦点。</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/change/\">.change()</a> 表单元素的值发生变化</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/click/\">.click()</a> 鼠标单击</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/dblclick/\">.dblclick()</a> 鼠标双击</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/focus/\">.focus()</a> 表单元素获得焦点</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/focusin/\">.focusin()</a> 子元素获得焦点</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/focusout/\">.focusout()</a> 子元素失去焦点 </p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/hover/\">.hover()</a> 同时为mouseenter和mouseleave事件指定处理函数</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/keydown/\">.keydown()</a> 按下键盘（长时间按键，只返回一个事件）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/keypress/\">.keypress()</a> 按下键盘（长时间按键，将返回多个事件）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/keyup/\">.keyup()</a> 松开键盘</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/load-event/\">.load()</a> 元素加载完毕</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mousedown/\">.mousedown()</a> 按下鼠标 </p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mouseenter/\">.mouseenter()</a> 鼠标进入（进入子元素不触发）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mouseleave/\">.mouseleave()</a> 鼠标离开（离开子元素不触发）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mousemove/\">.mousemove()</a> 鼠标在元素内部移动</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mouseleave/\">.mouseout()</a> 鼠标离开（离开子元素也触发）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mouseover/\">.mouseover()</a> 鼠标进入（进入子元素也触发）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/mouseup/\">.mouseup()</a> 松开鼠标</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/ready/\">.ready()</a> DOM加载完成</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/resize/\">.resize()</a> 浏览器窗口的大小发生改变</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/scroll/\">.scroll()</a> 滚动条的位置发生变化</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/select/\">.select()</a> 用户选中文本框中的内容</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/submit/\">.submit()</a> 用户递交表单</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/toggle-event/\">.toggle()</a> 根据鼠标点击的次数，依次运行多个函数</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/unload/\">.unload()</a> 用户离开页面</p>\n</blockquote>\n<p>以上这些事件在jQuery内部，都是<a rel=\"nofollow\" href=\"http://api.jquery.com/bind/\">.bind()</a>的便捷方式。使用<a rel=\"nofollow\" href=\"http://api.jquery.com/bind/\">.bind()</a>可以更灵活地控制事件，比如为多个事件绑定同一个函数：</p>\n<blockquote>\n<p> $(&#8216;input&#8217;).bind(</p>\n<p> &#8216;click change&#8217;, //同时绑定click和change事件</p>\n<p> function() </p>\n<p> alert(&#8216;Hello&#8217;);</p>\n</p>\n<p> );</p>\n</blockquote>\n<p>有时，你只想让事件运行一次，这时可以使用<a rel=\"nofollow\" href=\"http://api.jquery.com/one/\">.one()</a>方法。</p>\n<blockquote>\n<p> $(&#8220;p&#8221;).one(&#8220;click&#8221;, function() </p>\n<p> alert(&#8220;Hello&#8221;); //只运行一次，以后的点击不会运行</p>\n<p> );</p>\n</blockquote>\n<p><a rel=\"nofollow\" href=\"http://api.jquery.com/unbind/\">.unbind()</a>用来解除事件绑定。</p>\n<blockquote>\n<p> $(&#8216;p&#8217;).unbind(&#8216;click&#8217;);</p>\n</blockquote>\n<p>所有的事件处理函数，都可以接受一个<a rel=\"nofollow\" href=\"http://api.jquery.com/category/events/event-object/\">事件对象</a>（event object）作为参数，比如下面例子中的e：</p>\n<blockquote>\n<p> $(&#8220;p&#8221;).click(function(e) </p>\n<p> alert(e.type); // &#8220;click&#8221;</p>\n<p> );</p>\n</blockquote>\n<p>这个事件对象有一些很有用的属性和方法：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.pageX/\">event.pageX</a> 事件发生时，鼠标距离网页左上角的水平距离</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.pageY/\">event.pageY</a> 事件发生时，鼠标距离网页左上角的垂直距离</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.type/\">event.type</a> 事件的类型（比如click）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.which/\">event.which</a> 按下了哪一个键</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.data/\">event.data</a> 在事件对象上绑定数据，然后传入事件处理函数</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.target/\">event.target</a> 事件针对的网页元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.preventDefault/\">event.preventDefault()</a> 阻止事件的默认行为（比如点击链接，会自动打开新页面）</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/event.stopPropagation/\">event.stopPropagation()</a> 停止事件向上层元素冒泡</p>\n</blockquote>\n<p>在事件处理函数中，可以用this关键字，返回事件针对的DOM元素：</p>\n<blockquote>\n<p> $(&#8216;a&#8217;).click(function() </p>\n<p> if ($(this).attr(&#8216;href&#8217;).match(&#8216;evil&#8217;))  //如果确认为有害链接</p>\n<p> e.preventDefault(); //阻止打开</p>\n<p> $(this).addClass(&#8216;evil&#8217;); //加上表示有害的class</p>\n</p>\n<p> });</p>\n</blockquote>\n<p>有两种方法，可以自动触发一个事件。一种是直接使用事件函数，另一种是使用<a rel=\"nofollow\" href=\"http://api.jquery.com/trigger/\">.trigger()</a>或<a rel=\"nofollow\" href=\"http://api.jquery.com/triggerHandler/\">.triggerHandler()</a>。</p>\n<blockquote>\n<p> $(&#8216;a&#8217;).click();</p>\n<p> $(&#8216;a&#8217;).trigger(&#8216;click&#8217;);</p>\n</blockquote>\n<p><strong>九、特殊效果</strong></p>\n<p>jQuery允许对象呈现某些<a rel=\"nofollow\" href=\"http://api.jquery.com/category/effects/\">特殊效果</a>。</p>\n<blockquote>\n<p> $(&#8216;h1&#8217;).show(); //展现一个h1标题</p>\n</blockquote>\n<p>常用的特殊效果如下：</p>\n<blockquote>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/fadeIn/\">.fadeIn()</a> 淡入</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/fadeOut/\">.fadeOut()</a> 淡出</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/fadeTo/\">.fadeTo()</a> 调整透明度</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/hide/\">.hide()</a> 隐藏元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/show/\">.show()</a> 显示元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/slideDown/\">.slideDown()</a> 向下展开</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/slideUp/\">.slideUp()</a> 向上卷起</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/slideToggle/\">.slideToggle()</a> 依次展开或卷起某个元素</p>\n<p> <a rel=\"nofollow\" href=\"http://api.jquery.com/toggle/\">.toggle()</a> 依次展示或隐藏某个元素</p>\n</blockquote>\n<p>除了<a rel=\"nofollow\" href=\"http://api.jquery.com/show/\">.show()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/hide/\">.hide()</a>，所有其他特效的默认执行时间都是400ms（毫秒），但是你可以改变这个设置。</p>\n<blockquote>\n<p> $(&#8216;h1&#8217;).fadeIn(300); // 300毫秒内淡入</p>\n<p> $(&#8216;h1&#8217;).fadeOut(&#8216;slow&#8217;); // 缓慢地淡出</p>\n</blockquote>\n<p>在特效结束后，可以指定执行某个函数。</p>\n<blockquote>\n<p> $(&#8216;p&#8217;).fadeOut(300, function()  $(this).remove(); );</p>\n</blockquote>\n<p>更复杂的特效，可以用<a rel=\"nofollow\" href=\"http://api.jquery.com/animate/\">.animate()</a>自定义。</p>\n<blockquote>\n<p> $(&#8216;div&#8217;).animate(</p>\n</p>\n<p> left : &#8220;+=50&#8221;, //不断右移</p>\n<p> opacity : 0.25 //指定透明度</p>\n<p> ,</p>\n<p> 300, // 持续时间</p>\n<p> function()  alert(&#8216;done!&#8217;);  //回调函数</p>\n<p> );</p>\n</blockquote>\n<p><a rel=\"nofollow\" href=\"http://api.jquery.com/stop/\">.stop()</a>和<a rel=\"nofollow\" href=\"http://api.jquery.com/delay/\">.delay()</a>用来停止或延缓特效的执行。</p>\n<p><a rel=\"nofollow\" href=\"http://api.jquery.com/jQuery.fx.off/\">$.fx.off</a>如果设置为true，则关闭所有网页特效。</p>\n<p>（完）\n</p>\n<div>\n<h3>文档信息</h3>\n<ul>\n<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a rel=\"nofollow\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\">Creative Commons BY-NC-ND 3.0</a></li>\n<li>原文网址：<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/07/jquery_fundamentals.html\">http://www.ruanyifeng.com/blog/2011/07/jquery_fundamentals.html</a></li>\n<li>最后修改时间：2011年7月26日 14:05</li>\n<li>付费支持（<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2011/05/my_google_adsense_is_disabled.html\">说明</a>）：<a rel=\"nofollow\" href=\"https://lab.alipay.com/p.htm?id=2011051700196144\"><img alt=\"支付宝担保交易\" src=\"http://chinadigitaltimes.net/chinese/files/2011/07/3a976ef2rmb_32.png.png\" /></a> | <a rel=\"nofollow\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&#038;business=yifeng.ruan@gmail.com&#038;currency_code=USD&#038;amount=0.3&#038;return=http://www.ruanyifeng.com/thank.html&#038;item_name=Ruan%20YiFeng's%20Blog&#038;undefined_quantity=1&#038;no_note=0\"><img alt=\"paypal\" src=\"http://chinadigitaltimes.net/chinese/files/2011/07/5ca83e43dollar_32.png.png\" /></a> </li>\n</ul>\n</div>\n<p><img src=\"http://chinadigitaltimes.net/chinese/files/2011/07/c8b8ad32g2011072601.png-150x128.png\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=750556\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"750556\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":649,"categories":[9203],"tags":[9400]}