{"id":214380,"link":"https://chinadigitaltimes.net/chinese/2012/03/阮一峰-基于用户投票的排名算法（二）：reddit/","date":"2012-03-08T20:39:44Z","modified":"2012-03-08T20:39:44Z","title":"阮一峰 | 基于用户投票的排名算法（二）：Reddit","content":"<p><p>（不好意思，这个系列中断了近两周，我会尽快在这几天，把后面几篇写完。）</p>\n<p>上一次，我介绍了<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2012/02/ranking_algorithm_hacker_news.html\">Hacker News</a>的排名算法。它的特点是用户只能投赞成票，但是很多网站还允许用户投反对票。就是说，除了好评以外，你还可以给某篇文章差评。</p>\n<p><a rel=\"nofollow\" href=\"http://www.reddit.com/\"><img src=\"http://image.beekka.com/blog/201203/bg2012030701.jpg\" /></a></p>\n<p><a rel=\"nofollow\" href=\"http://www.reddit.com/\">Reddit</a>是美国最大的网上社区，它的每个帖子前面都有向上和向下的箭头，分别表示&#8221;赞成&#8221;和&#8221;反对&#8221;。用户点击进行投票，Reddit根据投票结果，计算出最新的&#8221;热点文章排行榜&#8221;。</p>\n<p>怎样才能将赞成票和反对票结合起来，计算出一段时间内最受欢迎的文章呢？如果文章A有100张赞成票、5张反对票，文章B有1000张赞成票、950张反对票，谁应该排在前面呢？</p>\n<p>Reddit的程序是<a rel=\"nofollow\" href=\"https://github.com/reddit/reddit\">开源</a>的，使用Python语言编写。排名算法的<a rel=\"nofollow\" href=\"http://pastebin.com/bygavdb7\">代码</a>大致如下：</p>\n<p><a rel=\"nofollow\" href=\"http://pastebin.com/bygavdb7\"><img src=\"http://image.beekka.com/blog/201203/bg2012030702.png\" /></a></p>\n<p>这段代码考虑了这样几个因素：</p>\n<p>（1）帖子的新旧程度t</p>\n<blockquote>\n<p>　　t = 发贴时间 &#8211; 2005年12月8日7:46:43</p>\n</blockquote>\n<p>t的单位为秒，用unix时间戳计算。不难看出，一旦帖子发表，t就是固定值，不会随时间改变，而且帖子越新，t值越大。至于2005年12月8日，应该是Reddit成立的时间。</p>\n<p>（2）赞成票与反对票的差x</p>\n<blockquote>\n<p>　　x = 赞成票 &#8211; 反对票 </p>\n</blockquote>\n<p>（3）投票方向y</p>\n<p>　　<img src=\"http://chart.googleapis.com/chart?cht=tx&#038;chl=y%3D%5Cbegin%7Bcases%7D%0A1%5Cqquad%5Cqquad%5Cqquad%5Cqquad%5Cqquad%5Cqquad(x%3E0)%5C%5C%0A0%5Cqquad%5Cqquad%5Cqquad%5Cqquad%5Cqquad%5Cqquad%20(x%3D0)%5C%5C%0A-1%5Cqquad(x%3C0)%0A%5Cend%7Bcases%7D&#038;chs=100\" /></p>\n<p>y是一个符号变量，表示对文章的总体看法。如果赞成票居多，y就是+1；如果反对票居多，y就是-1；如果赞成票和反对票相等，y就是0。</p>\n<p>（4）帖子的受肯定程度z</p>\n<p>　　<img src=\"http://chart.googleapis.com/chart?cht=tx&#038;chl=z%3D%5Cbegin%7Bcases%7D%0Ax%5Cqquad%5Cqquad%5Cqquad%5Cqquad(x%5Cge1)%5C%5C%0A1%5Cqquad%5Cqquad%5Cqquad%5Cqquad(x%5Cle0)%0A%5Cend%7Bcases%7D&#038;chs=80\" /></p>\n<p>z表示赞成票超过反对票的数量。如果赞成票少于或等于反对票，那么z就等于1。</p>\n<p>结合以上几个变量，Reddit的最终得分计算公式如下：</p>\n<p>　　<img src=\"http://chart.googleapis.com/chart?cht=tx&#038;chl=Score%3Dlog_%7B10%7Dz%2B%5Cfrac%7Byt%7D%7B45000%7D&#038;chs=80\" /></p>\n<p>这个公式可以分成两个部分来讨论：</p>\n<p>（一） </p>\n<p>　　<img src=\"http://chart.googleapis.com/chart?cht=tx&#038;chl=log_%7B10%7Dz&#038;chs=50\" /></p>\n<p>这个部分表示，赞成票超过反对票的数量越多，得分越高。</p>\n<p>需要注意的是，这里用的是以10为底的对数，意味着z=10可以得到1分，z=100可以得到2分。也就是说，前10个投票人与后90个投票人（乃至再后面900个投票人）的权重是一样的，即如果一个帖子特别受到欢迎，那么越到后面投赞成票，对得分越不会产生影响。</p>\n<p>当反对票超过或等于赞成票，z=1，因此这个部分等于0，也就是不产生得分。</p>\n<p>（二）</p>\n<p>　　<img src=\"http://chart.googleapis.com/chart?cht=tx&#038;chl=%5Cfrac%7Byt%7D%7B45000%7D&#038;chs=80\" /></p>\n<p>这个部分表示，t越大，得分越高，即新帖子的得分会高于老帖子。它起到自动将老帖子的排名往下拉的作用。</p>\n<p>分母的45000秒，等于12.5个小时，也就是说，后一天的帖子会比前一天的帖子多得2分。结合前一部分，可以得到结论，如果前一天的帖子在第二天还想保持原先的排名，在这一天里面，它得到的净赞成票必须增加100倍。</p>\n<p>y的作用是用来产生正分和负分。当赞成票超过反对票时，得分为正；当赞成票少于反对票时，得分为负；当两者相等，得分为0。这就保证了得到大量净赞成票的文章，会排在前列；得到大量净反对票的文章，会排在最后。</p>\n<p>（三）</p>\n<p>这种算法的一个问题是，对于那些有争议的文章（赞成票和反对票非常接近），它们不可能排到前列。假定同一时间有两个帖子发表，文章A有1张赞成票（发帖人投的）、0张反对票，文章B有1000张赞成票、1000张反对票，那么A的排名会高于B，这显然不合理。</p>\n<p><strong>结论就是，Reddit的排名，基本上由发帖时间决定，超级受欢迎的文章会排在最前面，一般性受欢迎的文章、有争议的文章都不会很靠前。</strong>这决定了Reddit是一个符合大众口味的社区，不是一个很激进、可以展示少数派想法的地方。</p>\n<p>[参考资料]</p>\n<p>　　* <a rel=\"nofollow\" href=\"http://amix.dk/blog/post/19588\">How Reddit ranking algorithms work </a></p>\n<p>（完）</p>\n<div>\n<h3>文档信息</h3>\n<ul>\n<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a rel=\"nofollow\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\">Creative Commons BY-NC-ND 3.0</a></li>\n<li>原文网址：<a rel=\"nofollow\" href=\"http://www.ruanyifeng.com/blog/2012/03/ranking_algorithm_reddit.html\">http://www.ruanyifeng.com/blog/2012/03/ranking_algorithm_reddit.html</a></li>\n<li>最后修改时间：2012年3月 7日 16:40</li>\n<li>付费支持：<a rel=\"nofollow\" href=\"https://mai.alipay.com/p.htm?id=2012010602227616\"><img alt=\"支付宝担保交易\" src=\"http://www.ruanyifeng.com/blog/images/rmb_32.png\" /></a> | <a rel=\"nofollow\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&#038;business=yifeng.ruan@gmail.com&#038;currency_code=USD&#038;amount=2.99&#038;return=http://www.ruanyifeng.com/thank.html&#038;item_name=Ruan%20YiFeng's%20Blog&#038;undefined_quantity=1&#038;no_note=0\"><img alt=\"paypal\" src=\"http://www.ruanyifeng.com/blog/images/dollar_32.png\" /></a> </li>\n</ul>\n</div>\n<div>\n</div>\n<p><img src=\"http://chinadigitaltimes.net/chinese/files/2012/03/2992d35bg2012030701.jpg-150x150.jpg\" /></p>\n<p><small>本文由自动聚合程序取自网络，内容和观点不代表数字时代立场</small></p>\n<p><iframe src=\"https://docs.google.com/spreadsheet/embeddedform?formkey=dGRpN3FrVThuMFFsZHBZcmNGLW94dEE6MQ\" width=\"450\" height=\"309\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading&#8230;</iframe></p>\n<form method=\"POST\" action=\"http://www.feedblitz.com/f/f.fbz?AddNewUserDirect\">\n定期获得翻墙信息？<a href=\"http://www.feedblitz.com/f/?Sub=750556\">请电邮订阅数字时代</a> <br /><input name=\"EMAIL\" maxlength=\"64\" type=\"text\" size=\"25\" value=\"\"><br />\n<input name=\"FEEDID\" type=\"hidden\" value=\"750556\"><br />\n<input name=\"PUBLISHER\" type=\"hidden\" value=\"7485568\"><br />\n<input type=\"submit\" value=\"订阅!\"><br />\n</form>\n","author":999,"categories":[9203],"tags":[5908,171,9400,8795]}